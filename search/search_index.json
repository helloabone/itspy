{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ITS Python \u8a8d\u8b49 \u5b78\u7fd2\u5de5\u5177 Python Replit.py Programiz.py \u6e2c\u9a57\u6280\u80fd \u4f7f\u7528\u8cc7\u6599\u985e\u578b\u548c\u904b\u7b97\u5b50\u57f7\u884c\u64cd\u4f5c(40 - 45 %) \u63a7\u5236\u5e36\u6709\u6c7a\u7b56\u548c\u8ff4\u5708\u7684\u6d41\u7a0b(15 - 20 %) \u57f7\u884c\u8f38\u5165\u548c\u8f38\u51fa\u64cd\u4f5c(10 - 15 %) \u6587\u4ef6\u548c\u7d50\u69cb\u4ee3\u78bc(10 - 15 %) \u57f7\u884c\u7591\u96e3\u6392\u89e3\u548c\u932f\u8aa4\u8655\u7406(10 - 15 %) \u4f7f\u7528\u6a21\u7d44\u548c\u5de5\u5177\u57f7\u884c\u64cd\u4f5c(5 - 10 %)","title":"\u9996\u9801"},{"location":"#its-python","text":"","title":"ITS Python \u8a8d\u8b49"},{"location":"#_1","text":"Python Replit.py Programiz.py","title":"\u5b78\u7fd2\u5de5\u5177"},{"location":"#_2","text":"\u4f7f\u7528\u8cc7\u6599\u985e\u578b\u548c\u904b\u7b97\u5b50\u57f7\u884c\u64cd\u4f5c(40 - 45 %) \u63a7\u5236\u5e36\u6709\u6c7a\u7b56\u548c\u8ff4\u5708\u7684\u6d41\u7a0b(15 - 20 %) \u57f7\u884c\u8f38\u5165\u548c\u8f38\u51fa\u64cd\u4f5c(10 - 15 %) \u6587\u4ef6\u548c\u7d50\u69cb\u4ee3\u78bc(10 - 15 %) \u57f7\u884c\u7591\u96e3\u6392\u89e3\u548c\u932f\u8aa4\u8655\u7406(10 - 15 %) \u4f7f\u7528\u6a21\u7d44\u548c\u5de5\u5177\u57f7\u884c\u64cd\u4f5c(5 - 10 %)","title":"\u6e2c\u9a57\u6280\u80fd"},{"location":"about/","text":"\u54c8\u56c9!\u7a0b\u8a9e \u8b1b\u7fa9\u7db2\u7ad9\u8457\u4f5c\u6b0a\u8072\u660e \u672c\u7db2\u7ad9\u4e0a\u520a\u8f09\u7684\u6240\u6709\u5167\u5bb9\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u65bc\uff1a\u6587\u5b57\u3001\u7167\u7247\u3001\u5f71\u50cf\u3001\u63d2\u5716\u3001\u5f71\u97f3\u53ca\u6a94\u6848\u7b49\u7d20\u6750\uff0c\u9664\u53e6\u6709\u8a3b\u660e\u5916\uff0c\u5176\u8457\u4f5c\u5747\u53d7\u5230\u4e2d\u83ef\u6c11\u570b\u8457\u4f5c\u6b0a\u6cd5\u7684\u4fdd\u969c\uff0c\u667a\u6167\u8ca1\u7522\u6b0a\u5305\u62ec\u4f46\u4e0d\u9650\u65bc\uff1a\u5546\u6a19\u6b0a\u3001\u5c08\u5229\u6b0a\u8457\u4f5c\u6b0a\u3001\u71df\u696d\u79d8\u5bc6\u8207\u5c08\u6709\u6280\u8853\u7b49\u3002 \u672c\u7db2\u7ad9\u5167\u5bb9\u7684\u667a\u6167\u8ca1\u7522\u6b0a\u70ba \u54c8\u56c9!\u7a0b\u8a9e \u6240\u6709\u3002 \u9664\u6cd5\u4ee4\u53e6\u6709\u898f\u5b9a\u6216\u4e8b\u524d\u7d93 \u54c8\u56c9!\u7a0b\u8a9e \u6240\u5c6c\u7db2\u7ad9\u4e4b\u7d93\u71df\u55ae\u4f4d\u6388\u6b0a\u5916\uff0c\u4f7f\u7528\u8005\u4e0d\u5f97\u64c5\u81ea\u4ee5\u4e0b\u8f09\u3001\u8f49\u8cbc\u6216\u4ee5\u4ed6\u6cd5\u91cd\u88fd\u672c\u7db2\u7ad9\u7684\u5167\u5bb9\uff0c\u4ea6\u4e0d\u5f97\u4ee5\u4efb\u4f55\u5f62\u5f0f\u7de8\u8f2f\u3001\u66f4\u6539\u3001\u526a\u63a5\u3001\u767c\u884c\u3001\u8f49\u8ce3\u3001\u51fa\u79df\u3001\u6539\u4f5c\u3001\u6563\u5e03\u3001\u516c\u958b\u5c55\u793a\u7b49\u65b9\u5f0f\u63d0\u4f9b\u4e88\u516c\u773e\u3002\u4f7f\u7528\u8005\u4ea6\u4e0d\u5f97\u5229\u7528\u672c\u7db2\u7ad9\u4e4b\u5c40\u90e8\u6216\u5168\u90e8\u5167\u5bb9\u4ee5\u8b00\u53d6\u5229\u76ca\uff0c\u5426\u5247\u6982\u7531\u4f7f\u7528\u8005\u81ea\u8ca0\u4e00\u5207\u8cac\u4efb\u3002\u5982\u56e0\u4e00\u822c\u500b\u4eba\u4f7f\u7528\uff0c\u4efb\u4f55\u7db2\u7ad9\u9023\u7d50\u81f3\u672c\u7db2\u7ad9\uff0c\u6bcb\u9808\u7d93\u904e \u54c8\u56c9!\u7a0b\u8a9e \u540c\u610f\uff0c\u7136\u800c\u9023\u7d50\u9808\u660e\u767d\u6a19\u793a\u672c\u7db2\u7ad9\u540d\u7a31\u3002 \u672c\u7db2\u7ad9\u8a2d\u7f6e\u76f8\u95dc\u9023\u7d50\u81f3\u7b2c\u4e09\u4eba\u7db2\u9801\u8005\uff0c\u8a72\u7b49\u9023\u7d50\u6240\u6307\u5411\u4e4b\u7db2\u9801\u6216\u8cc7\u6599\uff0c\u5747\u70ba\u88ab\u9023\u7d50\u7db2\u7ad9\u6240\u63d0\u4f9b\uff0c\u76f8\u95dc\u6b0a\u5229\u70ba\u8a72\u7b49\u7db2\u7ad9\u3001\u5167\u5bb9\u63d0\u4f9b\u8005\u6216\u5408\u6cd5\u6b0a\u5229\u4eba\u6240\u6709\uff0c \u54c8\u56c9!\u7a0b\u8a9e \u6240\u5c6c\u7db2\u7ad9\u4e4b\u7d93\u71df\u55ae\u4f4d\u4e0d\u64d4\u4fdd\u5176\u771f\u5be6\u6027\u3001\u6b63\u78ba\u6027\u3001\u5373\u6642\u6027\u3001\u5b8c\u6574\u6027\u6216\u5408\u6cd5\u6027\u3002 \u672c\u8072\u660e\u7684\u89e3\u91cb\u8207\u9069\u7528\uff0c\u4ee5\u53ca\u6709\u95dc\u7684\u722d\u8b70\uff0c\u5747\u61c9\u4ee5\u4e2d\u83ef\u6c11\u570b\u6cd5\u5f8b\u70ba\u6e96\u64da\u6cd5\u3002\u672c\u8072\u660e\u7684\u4efb\u4f55\u722d\u8b70\uff0c\u5747\u61c9\u4ee5\u667a\u6167\u8ca1\u7522\u6b0a\u6cd5\u9662\u70ba\u7b2c\u4e00\u5be9\u7ba1\u8f44\u6cd5\u9662\u3002 \u5982\u6b32\u5229\u7528\u672c\u7db2\u7ad9\u4e4b\u5167\u5bb9\u3001\u670d\u52d9\u6216\u6709\u5167\u5bb9\u6388\u6b0a\u9700\u6c42\uff0c\u8acb\u60a8\u81f3 \u54c8\u56c9!\u7a0b\u8a9e \u5b98\u65b9\u7db2\u7ad9\u806f\u7e6b\u6211\u5011\u3002","title":"\u8457\u4f5c\u6b0a\u8072\u660e"},{"location":"about/#_1","text":"\u672c\u7db2\u7ad9\u4e0a\u520a\u8f09\u7684\u6240\u6709\u5167\u5bb9\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u65bc\uff1a\u6587\u5b57\u3001\u7167\u7247\u3001\u5f71\u50cf\u3001\u63d2\u5716\u3001\u5f71\u97f3\u53ca\u6a94\u6848\u7b49\u7d20\u6750\uff0c\u9664\u53e6\u6709\u8a3b\u660e\u5916\uff0c\u5176\u8457\u4f5c\u5747\u53d7\u5230\u4e2d\u83ef\u6c11\u570b\u8457\u4f5c\u6b0a\u6cd5\u7684\u4fdd\u969c\uff0c\u667a\u6167\u8ca1\u7522\u6b0a\u5305\u62ec\u4f46\u4e0d\u9650\u65bc\uff1a\u5546\u6a19\u6b0a\u3001\u5c08\u5229\u6b0a\u8457\u4f5c\u6b0a\u3001\u71df\u696d\u79d8\u5bc6\u8207\u5c08\u6709\u6280\u8853\u7b49\u3002 \u672c\u7db2\u7ad9\u5167\u5bb9\u7684\u667a\u6167\u8ca1\u7522\u6b0a\u70ba \u54c8\u56c9!\u7a0b\u8a9e \u6240\u6709\u3002 \u9664\u6cd5\u4ee4\u53e6\u6709\u898f\u5b9a\u6216\u4e8b\u524d\u7d93 \u54c8\u56c9!\u7a0b\u8a9e \u6240\u5c6c\u7db2\u7ad9\u4e4b\u7d93\u71df\u55ae\u4f4d\u6388\u6b0a\u5916\uff0c\u4f7f\u7528\u8005\u4e0d\u5f97\u64c5\u81ea\u4ee5\u4e0b\u8f09\u3001\u8f49\u8cbc\u6216\u4ee5\u4ed6\u6cd5\u91cd\u88fd\u672c\u7db2\u7ad9\u7684\u5167\u5bb9\uff0c\u4ea6\u4e0d\u5f97\u4ee5\u4efb\u4f55\u5f62\u5f0f\u7de8\u8f2f\u3001\u66f4\u6539\u3001\u526a\u63a5\u3001\u767c\u884c\u3001\u8f49\u8ce3\u3001\u51fa\u79df\u3001\u6539\u4f5c\u3001\u6563\u5e03\u3001\u516c\u958b\u5c55\u793a\u7b49\u65b9\u5f0f\u63d0\u4f9b\u4e88\u516c\u773e\u3002\u4f7f\u7528\u8005\u4ea6\u4e0d\u5f97\u5229\u7528\u672c\u7db2\u7ad9\u4e4b\u5c40\u90e8\u6216\u5168\u90e8\u5167\u5bb9\u4ee5\u8b00\u53d6\u5229\u76ca\uff0c\u5426\u5247\u6982\u7531\u4f7f\u7528\u8005\u81ea\u8ca0\u4e00\u5207\u8cac\u4efb\u3002\u5982\u56e0\u4e00\u822c\u500b\u4eba\u4f7f\u7528\uff0c\u4efb\u4f55\u7db2\u7ad9\u9023\u7d50\u81f3\u672c\u7db2\u7ad9\uff0c\u6bcb\u9808\u7d93\u904e \u54c8\u56c9!\u7a0b\u8a9e \u540c\u610f\uff0c\u7136\u800c\u9023\u7d50\u9808\u660e\u767d\u6a19\u793a\u672c\u7db2\u7ad9\u540d\u7a31\u3002 \u672c\u7db2\u7ad9\u8a2d\u7f6e\u76f8\u95dc\u9023\u7d50\u81f3\u7b2c\u4e09\u4eba\u7db2\u9801\u8005\uff0c\u8a72\u7b49\u9023\u7d50\u6240\u6307\u5411\u4e4b\u7db2\u9801\u6216\u8cc7\u6599\uff0c\u5747\u70ba\u88ab\u9023\u7d50\u7db2\u7ad9\u6240\u63d0\u4f9b\uff0c\u76f8\u95dc\u6b0a\u5229\u70ba\u8a72\u7b49\u7db2\u7ad9\u3001\u5167\u5bb9\u63d0\u4f9b\u8005\u6216\u5408\u6cd5\u6b0a\u5229\u4eba\u6240\u6709\uff0c \u54c8\u56c9!\u7a0b\u8a9e \u6240\u5c6c\u7db2\u7ad9\u4e4b\u7d93\u71df\u55ae\u4f4d\u4e0d\u64d4\u4fdd\u5176\u771f\u5be6\u6027\u3001\u6b63\u78ba\u6027\u3001\u5373\u6642\u6027\u3001\u5b8c\u6574\u6027\u6216\u5408\u6cd5\u6027\u3002 \u672c\u8072\u660e\u7684\u89e3\u91cb\u8207\u9069\u7528\uff0c\u4ee5\u53ca\u6709\u95dc\u7684\u722d\u8b70\uff0c\u5747\u61c9\u4ee5\u4e2d\u83ef\u6c11\u570b\u6cd5\u5f8b\u70ba\u6e96\u64da\u6cd5\u3002\u672c\u8072\u660e\u7684\u4efb\u4f55\u722d\u8b70\uff0c\u5747\u61c9\u4ee5\u667a\u6167\u8ca1\u7522\u6b0a\u6cd5\u9662\u70ba\u7b2c\u4e00\u5be9\u7ba1\u8f44\u6cd5\u9662\u3002 \u5982\u6b32\u5229\u7528\u672c\u7db2\u7ad9\u4e4b\u5167\u5bb9\u3001\u670d\u52d9\u6216\u6709\u5167\u5bb9\u6388\u6b0a\u9700\u6c42\uff0c\u8acb\u60a8\u81f3 \u54c8\u56c9!\u7a0b\u8a9e \u5b98\u65b9\u7db2\u7ad9\u806f\u7e6b\u6211\u5011\u3002","title":"\u54c8\u56c9!\u7a0b\u8a9e \u8b1b\u7fa9\u7db2\u7ad9\u8457\u4f5c\u6b0a\u8072\u660e"},{"location":"ch00/","text":"0.Py\u7a0b\u5f0f\u57fa\u790e \u8f38\u51fa\u5b57\u4e32\u6216\u6574\u6578 1 2 3 4 5 6 # \u4f7f\u7528 print() \u51fd\u5f0f\uff0c\u53ef\u4ee5\u653e 2 \u500b\u4ee5\u4e0a\u53c3\u6578 print ( 'Hello!' ) print ( 123 ) print ( '123' + '456' ) print ( 123 + 456 ) print ( 123 , 456 , 789 ) \u8f38\u5165\u540d\u5b57\u8207\u8f38\u51fa 1 2 3 4 # \u57f7\u884c input() \u5f8c\uff0c\u7b49\u5f85\u63a5\u6536\u4f7f\u7528\u8005\u7684\u4e00\u500b\u8f38\u5165 # \u4efb\u4f55\u8f38\u5165\u5747\u70ba\u5b57\u4e32 name = input ( 'Name: ' ) print ( 'Hi' , name ) \u5169\u6578\u52a0\u6e1b\u4e58\u9664 1 2 3 4 5 6 7 8 9 10 # \u4efb\u4f55\u8f38\u5165\u5747\u70ba\u5b57\u4e32 # \u5fc5\u9808\u4ee5 int() \u8f49\u70ba\u6574\u6578\u624d\u53ef\u4ee5\u57f7\u884c\u7b97\u8853\u904b\u7b97 a = int ( input ( 'a: ' )) b = int ( input ( 'b: ' )) print ( f ' { a } + { b } = { a + b } ' ) print ( f ' { a } - { b } = { a - b } ' ) print ( f ' { a } * { b } = { a * b } ' ) print ( f ' { a } / { b } = { a / b } ' ) # \u8f38\u51fa\u683c\u5f0f\u8a2d\u5b9a :.2f \u8868\u793a\u4fdd\u7559\u81f3\u5c0f\u6578\u9ede\u5f8c 2 \u4f4d print ( f ' { a } / { b } = { a / b : .2f } ' ) \u5546\u6578\u8207\u9918\u6578 1 2 3 4 5 6 a = int ( input ( 'a: ' )) b = int ( input ( 'b: ' )) # \u5546\u6578 print ( f ' { a } // { b } = { a // b } ' ) # \u9918\u6578 print ( f ' { a } % { b } = { a % b } ' ) \u5947\u6578\u8207\u5076\u6578 1 2 3 4 5 6 7 8 n = int ( input ( 'n: ' )) # \u4efb\u4f55\u6574\u6578\u9664\u4ee5 2 \u7684\u9918\u6578\uff0c\u4e0d\u662f 0 \u5c31\u662f 1 # \u9918\u6578\u70ba 0 \u8868\u793a n \u53ef\u88ab 2 \u6574\u9664\uff0c\u5373 n \u662f\u5076\u6578 # \u9918\u6578\u70ba 1 \u8868\u793a n \u662f\u5947\u6578 if n % 2 == 1 : print ( n , '\u662f\u5947\u6578' ) elif n % 2 == 0 : print ( n , '\u662f\u5076\u6578' ) \u56e0\u6578\u5224\u65b7 1 2 3 4 5 6 7 8 9 a = int ( input ( 'a: ' )) b = int ( input ( 'b: ' )) # \u5224\u65b7\u4e00\u500b\u6578\u662f\u5426\u70ba\u53e6\u4e00\u500b\u6578\u7684\u56e0\u6578\uff0c\u61c9\u8a72\u7528\u9918\u6578 % \u904b\u7b97 if a % b == 0 : print ( f ' { b } \u662f { a } \u7684\u56e0\u6578' ) elif b % a == 0 : print ( f ' { a } \u662f { b } \u7684\u56e0\u6578' ) else : print ( f ' { a } \u548c { b } \u6c92\u6709\u56e0\u6578\u95dc\u4fc2' ) \u500d\u6578\u5224\u65b7 1 2 3 4 5 6 7 8 9 10 11 12 # \u4f7f\u7528 for \u8ff4\u5708 # \u8f38\u51fa a ~ b \u4e4b\u9593\u7684\u6574\u6578 # \u5224\u65b7\u54ea\u4e9b\u6578\u662f n \u7684\u500d\u6578 a = int ( input ( 'a: ' )) b = int ( input ( 'b: ' )) n = int ( input ( 'n: ' )) for i in range ( a , b + 1 ): if i % n == 0 : print ( f ' { i } \u662f { n } \u7684 { i // n } \u500d\u6578' ) else : print ( i ) \u6307\u6578\u82072\u7684\u6b21\u65b9 1 2 3 n = int ( input ( 'n: ' )) for i in range ( n + 1 ): print ( f '2 \u7684 { i } \u6b21\u65b9 = { 2 ** i } ' ) 26\u500b\u5b57\u6bcd 1 2 3 4 5 6 7 8 9 alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' # \u4f7f\u7528 len() \u8a08\u7b97\u5b57\u4e32\u4e2d\u5b57\u6bcd\u500b\u6578\uff0c\u4e26\u5b58\u5230\u8b8a\u6578 n n = len ( alpha ) for i in range ( n ): # \u4f7f\u7528\u7d22\u5f15\u6280\u5de7 (indexing) \u53d6\u51fa\u500b\u5225\u5b57\u6bcd\u4e26\u9010\u5217\u8f38\u51fa # index \u5f9e 0 \u958b\u59cb\uff0c\u56e0\u6b64 26 \u500b\u5b57\u6bcd\u7684 index \u662f\u5f9e 0 ~ 25 # \u4f7f\u7528 str.lower() \u65b9\u6cd5\u8f49\u63db\u4e26\u8f38\u51fa\u5c0f\u5beb print ( i , alpha [ i ], alpha [ i ] . lower ()) \u7d42\u6975\u5bc6\u78bc 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import random # \u5f9e 0 ~ 9999 \u96a8\u6a5f(\u4e82\u6578) \u6311\u9078\u4e00\u500b\u6574\u6578 answer = random . randrange ( 10000 ) print ( '\u7b54\u6848:' , answer ) # \u7121\u689d\u4ef6\u9032\u5165 while \u8ff4\u5708 while True : guess = int ( input ( '\u8acb\u5f9e 0 ~ 9999 \u4e2d\u731c\u4e00\u500b\u6574\u6578 (-1 \u8868\u793a\u653e\u68c4): ' )) if guess == - 1 : # break \u8868\u793a\u7acb\u5373\u96e2\u958b\u8ff4\u5708 print ( '\u5c1a\u672a\u7b54\u5c0d\u5c31\u653e\u68c4!' ) break elif guess == answer : print ( '\u606d\u559c\u7b54\u5c0d!' ) break elif guess > answer : print ( '\u6bd4\u7b54\u6848\u5927!' ) elif guess < answer : print ( '\u6bd4\u7b54\u6848\u5c0f!' )","title":"0.Py\u7a0b\u5f0f\u57fa\u790e"},{"location":"ch00/#0py","text":"","title":"0.Py\u7a0b\u5f0f\u57fa\u790e"},{"location":"ch00/#_1","text":"1 2 3 4 5 6 # \u4f7f\u7528 print() \u51fd\u5f0f\uff0c\u53ef\u4ee5\u653e 2 \u500b\u4ee5\u4e0a\u53c3\u6578 print ( 'Hello!' ) print ( 123 ) print ( '123' + '456' ) print ( 123 + 456 ) print ( 123 , 456 , 789 )","title":"\u8f38\u51fa\u5b57\u4e32\u6216\u6574\u6578"},{"location":"ch00/#_2","text":"1 2 3 4 # \u57f7\u884c input() \u5f8c\uff0c\u7b49\u5f85\u63a5\u6536\u4f7f\u7528\u8005\u7684\u4e00\u500b\u8f38\u5165 # \u4efb\u4f55\u8f38\u5165\u5747\u70ba\u5b57\u4e32 name = input ( 'Name: ' ) print ( 'Hi' , name )","title":"\u8f38\u5165\u540d\u5b57\u8207\u8f38\u51fa"},{"location":"ch00/#_3","text":"1 2 3 4 5 6 7 8 9 10 # \u4efb\u4f55\u8f38\u5165\u5747\u70ba\u5b57\u4e32 # \u5fc5\u9808\u4ee5 int() \u8f49\u70ba\u6574\u6578\u624d\u53ef\u4ee5\u57f7\u884c\u7b97\u8853\u904b\u7b97 a = int ( input ( 'a: ' )) b = int ( input ( 'b: ' )) print ( f ' { a } + { b } = { a + b } ' ) print ( f ' { a } - { b } = { a - b } ' ) print ( f ' { a } * { b } = { a * b } ' ) print ( f ' { a } / { b } = { a / b } ' ) # \u8f38\u51fa\u683c\u5f0f\u8a2d\u5b9a :.2f \u8868\u793a\u4fdd\u7559\u81f3\u5c0f\u6578\u9ede\u5f8c 2 \u4f4d print ( f ' { a } / { b } = { a / b : .2f } ' )","title":"\u5169\u6578\u52a0\u6e1b\u4e58\u9664"},{"location":"ch00/#_4","text":"1 2 3 4 5 6 a = int ( input ( 'a: ' )) b = int ( input ( 'b: ' )) # \u5546\u6578 print ( f ' { a } // { b } = { a // b } ' ) # \u9918\u6578 print ( f ' { a } % { b } = { a % b } ' )","title":"\u5546\u6578\u8207\u9918\u6578"},{"location":"ch00/#_5","text":"1 2 3 4 5 6 7 8 n = int ( input ( 'n: ' )) # \u4efb\u4f55\u6574\u6578\u9664\u4ee5 2 \u7684\u9918\u6578\uff0c\u4e0d\u662f 0 \u5c31\u662f 1 # \u9918\u6578\u70ba 0 \u8868\u793a n \u53ef\u88ab 2 \u6574\u9664\uff0c\u5373 n \u662f\u5076\u6578 # \u9918\u6578\u70ba 1 \u8868\u793a n \u662f\u5947\u6578 if n % 2 == 1 : print ( n , '\u662f\u5947\u6578' ) elif n % 2 == 0 : print ( n , '\u662f\u5076\u6578' )","title":"\u5947\u6578\u8207\u5076\u6578"},{"location":"ch00/#_6","text":"1 2 3 4 5 6 7 8 9 a = int ( input ( 'a: ' )) b = int ( input ( 'b: ' )) # \u5224\u65b7\u4e00\u500b\u6578\u662f\u5426\u70ba\u53e6\u4e00\u500b\u6578\u7684\u56e0\u6578\uff0c\u61c9\u8a72\u7528\u9918\u6578 % \u904b\u7b97 if a % b == 0 : print ( f ' { b } \u662f { a } \u7684\u56e0\u6578' ) elif b % a == 0 : print ( f ' { a } \u662f { b } \u7684\u56e0\u6578' ) else : print ( f ' { a } \u548c { b } \u6c92\u6709\u56e0\u6578\u95dc\u4fc2' )","title":"\u56e0\u6578\u5224\u65b7"},{"location":"ch00/#_7","text":"1 2 3 4 5 6 7 8 9 10 11 12 # \u4f7f\u7528 for \u8ff4\u5708 # \u8f38\u51fa a ~ b \u4e4b\u9593\u7684\u6574\u6578 # \u5224\u65b7\u54ea\u4e9b\u6578\u662f n \u7684\u500d\u6578 a = int ( input ( 'a: ' )) b = int ( input ( 'b: ' )) n = int ( input ( 'n: ' )) for i in range ( a , b + 1 ): if i % n == 0 : print ( f ' { i } \u662f { n } \u7684 { i // n } \u500d\u6578' ) else : print ( i )","title":"\u500d\u6578\u5224\u65b7"},{"location":"ch00/#2","text":"1 2 3 n = int ( input ( 'n: ' )) for i in range ( n + 1 ): print ( f '2 \u7684 { i } \u6b21\u65b9 = { 2 ** i } ' )","title":"\u6307\u6578\u82072\u7684\u6b21\u65b9"},{"location":"ch00/#26","text":"1 2 3 4 5 6 7 8 9 alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' # \u4f7f\u7528 len() \u8a08\u7b97\u5b57\u4e32\u4e2d\u5b57\u6bcd\u500b\u6578\uff0c\u4e26\u5b58\u5230\u8b8a\u6578 n n = len ( alpha ) for i in range ( n ): # \u4f7f\u7528\u7d22\u5f15\u6280\u5de7 (indexing) \u53d6\u51fa\u500b\u5225\u5b57\u6bcd\u4e26\u9010\u5217\u8f38\u51fa # index \u5f9e 0 \u958b\u59cb\uff0c\u56e0\u6b64 26 \u500b\u5b57\u6bcd\u7684 index \u662f\u5f9e 0 ~ 25 # \u4f7f\u7528 str.lower() \u65b9\u6cd5\u8f49\u63db\u4e26\u8f38\u51fa\u5c0f\u5beb print ( i , alpha [ i ], alpha [ i ] . lower ())","title":"26\u500b\u5b57\u6bcd"},{"location":"ch00/#_8","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import random # \u5f9e 0 ~ 9999 \u96a8\u6a5f(\u4e82\u6578) \u6311\u9078\u4e00\u500b\u6574\u6578 answer = random . randrange ( 10000 ) print ( '\u7b54\u6848:' , answer ) # \u7121\u689d\u4ef6\u9032\u5165 while \u8ff4\u5708 while True : guess = int ( input ( '\u8acb\u5f9e 0 ~ 9999 \u4e2d\u731c\u4e00\u500b\u6574\u6578 (-1 \u8868\u793a\u653e\u68c4): ' )) if guess == - 1 : # break \u8868\u793a\u7acb\u5373\u96e2\u958b\u8ff4\u5708 print ( '\u5c1a\u672a\u7b54\u5c0d\u5c31\u653e\u68c4!' ) break elif guess == answer : print ( '\u606d\u559c\u7b54\u5c0d!' ) break elif guess > answer : print ( '\u6bd4\u7b54\u6848\u5927!' ) elif guess < answer : print ( '\u6bd4\u7b54\u6848\u5c0f!' )","title":"\u7d42\u6975\u5bc6\u78bc"},{"location":"ch01/","text":"1.\u8cc7\u6599\u548c\u904b\u7b97 \u4f7f\u7528\u8cc7\u6599\u985e\u578b\u548c\u904b\u7b97\u5b50\u57f7\u884c\u64cd\u4f5c \u6253\u602a\u7684\u6642\u6578 1 2 3 start = input ( \"\u4f60\u5e7e\u9ede\u958b\u59cb\u6253\u602a\u7684? \" ) end = input ( \"\u73fe\u5728\u5e7e\u9ede? \" ) print ( \"\u4f60\u5df2\u7d93\u6253\u4e86 \" + str ( int ( end ) - int ( start )) + \" \u5c0f\u6642\" ) \u5224\u8b80\u8cc7\u6599\u985e\u5225x2 (1) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 x1 = \"8\" y1 = 7 a = x1 * y1 print ( \"a:\" , a , type ( a )) x2 = 8 y2 = 7 b = x2 / y2 print ( \"b:\" , b , type ( b )) x3 = 8.7 y3 = 1 c = x3 / y3 print ( \"c:\" , c , type ( c )) (2) \u6e2c\u8cc7\u6a94 1 2 3 4 5 6 7 16 False 'Python' 9.87 \"5.38\" +2E11 \"True\" \u7a0b\u5f0f\u6a94 1 2 3 4 5 6 7 8 9 10 11 while True : try : # 1. input() \u8b80\u5165\u4e00\u884c\u6e2c\u8cc7 # 2. eval() \u89e3\u6790\u8cc7\u6599\u503c # 3. type() \u5224\u8b80\u8cc7\u6599\u985e\u5225 print ( type ( eval ( input ()))) except EOFError : # \u6e2c\u8cc7\u8b80\u5b8c\uff0c\u6703\u767c\u751f EOFError # EOF: End Of File # \u7acb\u5373\u96e2\u958b while \u8ff4\u5708 break \u5224\u8b80\u5e03\u6797\u503c 1 2 3 4 5 6 7 print ( bool ( 0 )) print ( bool ( 1 )) print ( bool ( - 1 )) print ( None is None ) print ( False is False ) print ( - 7 < 0 < 7 ) print ( - 7 > 0 < 7 ) \u7279\u5225or\u904b\u7b97 1 2 3 4 5 print ( 0 or 7 ) print ( 1 or 7 ) print ( - 1 or 7 ) print ( None or 7 ) print ( False or 7 ) \u904b\u7b97\u5b50\u512a\u5148\u5e8fx4 (1) 1 2 3 4 5 6 # \u62ec\u865f > \u6307\u6578 > \u4e58\u3001\u9664\u3001\u5546\u3001\u9918 > \u52a0\u3001\u6e1b a = 24 b = 9 answer = ( a % b * 100 ) // 2 ** 4.0 - b # \u6b63\u78ba\u9078\u9805\u70ba 28.0 \u6216 28 print ( answer ) (2) 1 2 3 4 5 6 7 # \u62ec\u865f > \u6307\u6578 > \u6b63\u3001\u8ca0\u3001\u53cd > \u4e58\u3001\u9664\u3001\u5546\u3001\u9918 > \u52a0\u3001\u6e1b > \u4e14\u3001\u6216 # \u6307\u6578 > \u6b63\u6578(+)\u3001\u8ca0\u6578(-)\u3001\u53cd\u76f8(not) print ( - 2 ** 3 ) print (( - 2 ) ** 3 ) print ( + 2 ** 2 + - 3 ** 3 ) print ( - 100 + 8 ** 2 * 2 ) (3) 1 2 3 4 5 6 7 8 9 # \u62ec\u865f > \u6307\u6578 > \u6b63\u3001\u8ca0\u3001\u53cd > \u4e58\u3001\u9664\u3001\u5546\u3001\u9918 > \u52a0\u3001\u6e1b > \u4e14\u3001\u6216 # \u4e14(and)\u7684\u908f\u8f2f\u904b\u7b97\uff1a\u5169\u65b9\u90fd\u70baTrue\u624d\u662fTrue print ( True and True ) print ( 5 + 3 < 10 and 5 * 3 > 10 ) # \u6216(or)\u7684\u908f\u8f2f\u904b\u7b97\uff1a\u5176\u4e2d\u4e00\u65b9\u70baTrue\u5c31\u662fTrue print ( True or False ) print ( 5 + 3 < 10 or 5 - 3 > 10 ) (4) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # \u62ec\u865f > \u6307\u6578 > \u6b63\u3001\u8ca0\u3001\u53cd > \u4e58\u3001\u9664\u3001\u5546\u3001\u9918 > \u52a0\u3001\u6e1b > \u4e14\u3001\u6216 # \u53cd(not)\u7684\u908f\u8f2f\u904b\u7b97\uff1a print ( not True or False ) print ( not False or False ) print ( not ( 5 + 3 < 10 or 5 - 3 > 10 )) print ( not ( 5 + 3 == 10 and 5 - 3 != 10 )) # 0\u8868\u793aFalse\uff0c\u5176\u5b83\u6574\u6578\u8868\u793aTrue print ( not 1 ) print ( not 0 ) print ( not - 1 ) # \u7a7a\u5b57\u4e32\u8868\u793aFalse\uff0c\u7a7a\u767d\u5b57\u4e32\u8868\u793aTrue print ( not '' ) print ( not ' ' ) \u5b57\u4e32\u5408\u4f75x2 (1) 1 2 3 4 5 6 7 8 astr = 'Hello' print ( astr ) bstr = 'Hello' astr += bstr print ( astr ) print ( bstr ) bstr += astr print ( bstr ) (2) 1 2 3 4 5 6 7 8 astr = '123' print ( astr ) bstr = '456' astr += bstr print ( astr ) print ( bstr ) bstr += astr print ( bstr ) \u51fa\u751f\u897f\u5143\u5e74 1 2 3 4 5 6 7 8 9 10 11 12 age = input ( \"\u4f60\u76ee\u524d\u5e7e\u6b72? \" ) this_year = input ( \"\u73fe\u5728\u897f\u5143\u5e7e\u5e74? \" ) birth_year = eval ( this_year ) - eval ( age ) message = \"\u4f60\u7684\u51fa\u751f\u5e74\u662f \" + str ( birth_year ) print ( message ) # \u5224\u8b80\u6240\u6709\u8b8a\u6578\u985e\u5225 print ( '-' * 20 ) print ( age , type ( age )) print ( this_year , type ( this_year )) print ( birth_year , type ( birth_year )) print ( message , type ( message )) \u6578\u503c\u662f\u5426\u5b58\u5728\u4e32\u5217 1 2 3 alist = [ 5 , 4 , 9 , 8 , 7 ] print ( 2 in alist ) print ( 4 in alist ) \u5169\u500b\u4e32\u5217\u6bd4\u8f03 1 2 3 4 5 6 7 8 9 10 11 alist = [ '1' , '2' , '3' , '4' , '5' ] blist = [ 1 , 2 , 3 , 4 , 5 ] print ( alist ) print ( blist ) print ( alist is blist ) print ( alist == blist ) alist = blist print ( alist ) print ( blist ) print ( alist is blist ) print ( alist == blist ) \u5e73\u5747\u5206\u6578 1 2 3 4 5 6 7 8 9 10 11 12 # \u5168\u73ed\u7684 ITS Python \u5206\u6578 scores = [ 810 , 856 , 956 , 977 , 878 ] # \u5168\u73ed\u4eba\u6578 n = len ( scores ) # \u5168\u73ed\u5206\u6578\u5408\u8a08 total = sum ( scores ) # \u8a08\u7b97\u5e73\u5747\u5206\u6578\uff0c\u7121\u689d\u4ef6\u6368\u81f3\u6574\u6578 print ( '# \u7b97\u6cd5\u4e00' ) print ( int ( total / n )) print ( '# \u7b97\u6cd5\u4e8c' ) print ( total // n ) \u8dd1\u6b65\u914d\u901f\u8a08\u7b97 1 2 3 4 5 6 7 8 9 10 11 # \u5141\u8a31\u8f38\u5165\u6d6e\u9ede\u6578\uff0c\u5982\u6b64\u53ef\u4ee5\u8868\u793a\u5f97\u66f4\u7cbe\u6e96 meters = float ( input ( \"\u7d93\u904e\u591a\u5c11\u516c\u5c3a? \" )) # \u7d93\u904e\u8ddd\u96e2\u63db\u70ba\u516c\u91cc kms = meters / 1000 minutes = int ( input ( \"\u5e7e\u5206? \" )) seconds = int ( input ( \"\u5e7e\u79d2? \" )) # \u7d93\u904e\u6642\u9593\u63db\u7b97\u70ba\u79d2 elapsed_time = minutes * 60 + seconds pace = elapsed_time / kms # \u5e73\u5747\u6bcf\u516c\u91cc\u7d93\u904e\u6642\u9593 print ( \"\u8dd1\u6b65\u914d\u901f:\" , str ( pace // 60 ) + \":\" + str ( pace % 60 )) \u4e32\u5217\u52a0\u4e58\u5408\u4f75 1 2 3 4 5 6 7 8 9 10 list1 = [ 5 , 4 ] list2 = [ 8 , 7 ] # list1 \u548c list2 \u5408\u4f75\u5f8c\uff0c\u5b58\u5230 list3 list3 = list1 + list2 print ( list3 ) # \u5c07 list3 \u8907\u88fd 2 \u500b\u5f8c\u5408\u4f75\uff0c\u4e26\u5b58\u5230 list4 list4 = list3 * 2 print ( list4 ) \u5b57\u4e32\u6578\u64da\u5207\u53d6 1 2 3 4 5 6 7 8 9 # \u5b57\u4e32\u7269\u4ef6[start:stop:step] letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" print ( letters [ 3 : 15 ]) print ( letters [ 3 : 15 : 3 ]) print ( letters [ 15 : 3 : 3 ]) print ( letters [ 15 : 3 : - 3 ]) print ( letters [:: - 1 ]) print ( letters [:: - 3 ]) \u4e32\u5217\u6578\u64da\u5207\u53d6 1 2 3 4 5 6 7 8 9 10 11 # \u4e32\u5217\u7269\u4ef6[start:stop:step] alist = list ( range ( 20 )) print ( alist [ 0 :: 2 ]) print ( alist [ 1 :: 2 ]) print ( alist [: 10 ]) print ( alist [ 10 :]) print ( alist [: 5 ]) print ( alist [ - 5 :]) print ( alist [ 18 : 3 : - 3 ]) print ( alist [:: - 1 ][: 10 ])","title":"1.\u8cc7\u6599\u548c\u904b\u7b97"},{"location":"ch01/#1","text":"\u4f7f\u7528\u8cc7\u6599\u985e\u578b\u548c\u904b\u7b97\u5b50\u57f7\u884c\u64cd\u4f5c","title":"1.\u8cc7\u6599\u548c\u904b\u7b97"},{"location":"ch01/#_1","text":"1 2 3 start = input ( \"\u4f60\u5e7e\u9ede\u958b\u59cb\u6253\u602a\u7684? \" ) end = input ( \"\u73fe\u5728\u5e7e\u9ede? \" ) print ( \"\u4f60\u5df2\u7d93\u6253\u4e86 \" + str ( int ( end ) - int ( start )) + \" \u5c0f\u6642\" )","title":"\u6253\u602a\u7684\u6642\u6578"},{"location":"ch01/#x2","text":"(1) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 x1 = \"8\" y1 = 7 a = x1 * y1 print ( \"a:\" , a , type ( a )) x2 = 8 y2 = 7 b = x2 / y2 print ( \"b:\" , b , type ( b )) x3 = 8.7 y3 = 1 c = x3 / y3 print ( \"c:\" , c , type ( c )) (2) \u6e2c\u8cc7\u6a94 1 2 3 4 5 6 7 16 False 'Python' 9.87 \"5.38\" +2E11 \"True\" \u7a0b\u5f0f\u6a94 1 2 3 4 5 6 7 8 9 10 11 while True : try : # 1. input() \u8b80\u5165\u4e00\u884c\u6e2c\u8cc7 # 2. eval() \u89e3\u6790\u8cc7\u6599\u503c # 3. type() \u5224\u8b80\u8cc7\u6599\u985e\u5225 print ( type ( eval ( input ()))) except EOFError : # \u6e2c\u8cc7\u8b80\u5b8c\uff0c\u6703\u767c\u751f EOFError # EOF: End Of File # \u7acb\u5373\u96e2\u958b while \u8ff4\u5708 break","title":"\u5224\u8b80\u8cc7\u6599\u985e\u5225x2"},{"location":"ch01/#_2","text":"1 2 3 4 5 6 7 print ( bool ( 0 )) print ( bool ( 1 )) print ( bool ( - 1 )) print ( None is None ) print ( False is False ) print ( - 7 < 0 < 7 ) print ( - 7 > 0 < 7 )","title":"\u5224\u8b80\u5e03\u6797\u503c"},{"location":"ch01/#or","text":"1 2 3 4 5 print ( 0 or 7 ) print ( 1 or 7 ) print ( - 1 or 7 ) print ( None or 7 ) print ( False or 7 )","title":"\u7279\u5225or\u904b\u7b97"},{"location":"ch01/#x4","text":"(1) 1 2 3 4 5 6 # \u62ec\u865f > \u6307\u6578 > \u4e58\u3001\u9664\u3001\u5546\u3001\u9918 > \u52a0\u3001\u6e1b a = 24 b = 9 answer = ( a % b * 100 ) // 2 ** 4.0 - b # \u6b63\u78ba\u9078\u9805\u70ba 28.0 \u6216 28 print ( answer ) (2) 1 2 3 4 5 6 7 # \u62ec\u865f > \u6307\u6578 > \u6b63\u3001\u8ca0\u3001\u53cd > \u4e58\u3001\u9664\u3001\u5546\u3001\u9918 > \u52a0\u3001\u6e1b > \u4e14\u3001\u6216 # \u6307\u6578 > \u6b63\u6578(+)\u3001\u8ca0\u6578(-)\u3001\u53cd\u76f8(not) print ( - 2 ** 3 ) print (( - 2 ) ** 3 ) print ( + 2 ** 2 + - 3 ** 3 ) print ( - 100 + 8 ** 2 * 2 ) (3) 1 2 3 4 5 6 7 8 9 # \u62ec\u865f > \u6307\u6578 > \u6b63\u3001\u8ca0\u3001\u53cd > \u4e58\u3001\u9664\u3001\u5546\u3001\u9918 > \u52a0\u3001\u6e1b > \u4e14\u3001\u6216 # \u4e14(and)\u7684\u908f\u8f2f\u904b\u7b97\uff1a\u5169\u65b9\u90fd\u70baTrue\u624d\u662fTrue print ( True and True ) print ( 5 + 3 < 10 and 5 * 3 > 10 ) # \u6216(or)\u7684\u908f\u8f2f\u904b\u7b97\uff1a\u5176\u4e2d\u4e00\u65b9\u70baTrue\u5c31\u662fTrue print ( True or False ) print ( 5 + 3 < 10 or 5 - 3 > 10 ) (4) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # \u62ec\u865f > \u6307\u6578 > \u6b63\u3001\u8ca0\u3001\u53cd > \u4e58\u3001\u9664\u3001\u5546\u3001\u9918 > \u52a0\u3001\u6e1b > \u4e14\u3001\u6216 # \u53cd(not)\u7684\u908f\u8f2f\u904b\u7b97\uff1a print ( not True or False ) print ( not False or False ) print ( not ( 5 + 3 < 10 or 5 - 3 > 10 )) print ( not ( 5 + 3 == 10 and 5 - 3 != 10 )) # 0\u8868\u793aFalse\uff0c\u5176\u5b83\u6574\u6578\u8868\u793aTrue print ( not 1 ) print ( not 0 ) print ( not - 1 ) # \u7a7a\u5b57\u4e32\u8868\u793aFalse\uff0c\u7a7a\u767d\u5b57\u4e32\u8868\u793aTrue print ( not '' ) print ( not ' ' )","title":"\u904b\u7b97\u5b50\u512a\u5148\u5e8fx4"},{"location":"ch01/#x2_1","text":"(1) 1 2 3 4 5 6 7 8 astr = 'Hello' print ( astr ) bstr = 'Hello' astr += bstr print ( astr ) print ( bstr ) bstr += astr print ( bstr ) (2) 1 2 3 4 5 6 7 8 astr = '123' print ( astr ) bstr = '456' astr += bstr print ( astr ) print ( bstr ) bstr += astr print ( bstr )","title":"\u5b57\u4e32\u5408\u4f75x2"},{"location":"ch01/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 age = input ( \"\u4f60\u76ee\u524d\u5e7e\u6b72? \" ) this_year = input ( \"\u73fe\u5728\u897f\u5143\u5e7e\u5e74? \" ) birth_year = eval ( this_year ) - eval ( age ) message = \"\u4f60\u7684\u51fa\u751f\u5e74\u662f \" + str ( birth_year ) print ( message ) # \u5224\u8b80\u6240\u6709\u8b8a\u6578\u985e\u5225 print ( '-' * 20 ) print ( age , type ( age )) print ( this_year , type ( this_year )) print ( birth_year , type ( birth_year )) print ( message , type ( message ))","title":"\u51fa\u751f\u897f\u5143\u5e74"},{"location":"ch01/#_4","text":"1 2 3 alist = [ 5 , 4 , 9 , 8 , 7 ] print ( 2 in alist ) print ( 4 in alist )","title":"\u6578\u503c\u662f\u5426\u5b58\u5728\u4e32\u5217"},{"location":"ch01/#_5","text":"1 2 3 4 5 6 7 8 9 10 11 alist = [ '1' , '2' , '3' , '4' , '5' ] blist = [ 1 , 2 , 3 , 4 , 5 ] print ( alist ) print ( blist ) print ( alist is blist ) print ( alist == blist ) alist = blist print ( alist ) print ( blist ) print ( alist is blist ) print ( alist == blist )","title":"\u5169\u500b\u4e32\u5217\u6bd4\u8f03"},{"location":"ch01/#_6","text":"1 2 3 4 5 6 7 8 9 10 11 12 # \u5168\u73ed\u7684 ITS Python \u5206\u6578 scores = [ 810 , 856 , 956 , 977 , 878 ] # \u5168\u73ed\u4eba\u6578 n = len ( scores ) # \u5168\u73ed\u5206\u6578\u5408\u8a08 total = sum ( scores ) # \u8a08\u7b97\u5e73\u5747\u5206\u6578\uff0c\u7121\u689d\u4ef6\u6368\u81f3\u6574\u6578 print ( '# \u7b97\u6cd5\u4e00' ) print ( int ( total / n )) print ( '# \u7b97\u6cd5\u4e8c' ) print ( total // n )","title":"\u5e73\u5747\u5206\u6578"},{"location":"ch01/#_7","text":"1 2 3 4 5 6 7 8 9 10 11 # \u5141\u8a31\u8f38\u5165\u6d6e\u9ede\u6578\uff0c\u5982\u6b64\u53ef\u4ee5\u8868\u793a\u5f97\u66f4\u7cbe\u6e96 meters = float ( input ( \"\u7d93\u904e\u591a\u5c11\u516c\u5c3a? \" )) # \u7d93\u904e\u8ddd\u96e2\u63db\u70ba\u516c\u91cc kms = meters / 1000 minutes = int ( input ( \"\u5e7e\u5206? \" )) seconds = int ( input ( \"\u5e7e\u79d2? \" )) # \u7d93\u904e\u6642\u9593\u63db\u7b97\u70ba\u79d2 elapsed_time = minutes * 60 + seconds pace = elapsed_time / kms # \u5e73\u5747\u6bcf\u516c\u91cc\u7d93\u904e\u6642\u9593 print ( \"\u8dd1\u6b65\u914d\u901f:\" , str ( pace // 60 ) + \":\" + str ( pace % 60 ))","title":"\u8dd1\u6b65\u914d\u901f\u8a08\u7b97"},{"location":"ch01/#_8","text":"1 2 3 4 5 6 7 8 9 10 list1 = [ 5 , 4 ] list2 = [ 8 , 7 ] # list1 \u548c list2 \u5408\u4f75\u5f8c\uff0c\u5b58\u5230 list3 list3 = list1 + list2 print ( list3 ) # \u5c07 list3 \u8907\u88fd 2 \u500b\u5f8c\u5408\u4f75\uff0c\u4e26\u5b58\u5230 list4 list4 = list3 * 2 print ( list4 )","title":"\u4e32\u5217\u52a0\u4e58\u5408\u4f75"},{"location":"ch01/#_9","text":"1 2 3 4 5 6 7 8 9 # \u5b57\u4e32\u7269\u4ef6[start:stop:step] letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" print ( letters [ 3 : 15 ]) print ( letters [ 3 : 15 : 3 ]) print ( letters [ 15 : 3 : 3 ]) print ( letters [ 15 : 3 : - 3 ]) print ( letters [:: - 1 ]) print ( letters [:: - 3 ])","title":"\u5b57\u4e32\u6578\u64da\u5207\u53d6"},{"location":"ch01/#_10","text":"1 2 3 4 5 6 7 8 9 10 11 # \u4e32\u5217\u7269\u4ef6[start:stop:step] alist = list ( range ( 20 )) print ( alist [ 0 :: 2 ]) print ( alist [ 1 :: 2 ]) print ( alist [: 10 ]) print ( alist [ 10 :]) print ( alist [: 5 ]) print ( alist [ - 5 :]) print ( alist [ 18 : 3 : - 3 ]) print ( alist [:: - 1 ][: 10 ])","title":"\u4e32\u5217\u6578\u64da\u5207\u53d6"},{"location":"ch02/","text":"2.\u6c7a\u7b56\u548c\u8ff4\u5708 \u63a7\u5236\u5e36\u6709\u6c7a\u7b56\u548c\u8ff4\u5708\u7684\u6d41\u7a0b \u54c1\u724c\u82f1\u6587\u5927\u5c0f\u5beb 1 2 3 4 5 6 7 8 brand_name = input ( \"\u8f38\u5165\u54c1\u724c\u82f1\u6587\u540d\u5b57: \" ) if brand_name . upper () == brand_name : print ( \"\u5168\u90e8\u5927\u5beb\" ) elif brand_name . lower () == brand_name : print ( \"\u5168\u90e8\u5c0f\u5beb\" ) else : print ( '\u5927\u5beb\u5c0f\u5beb\u90fd\u6709' ) \u4e32\u5217\u5167\u5bb9\u6bd4\u8f03 1 2 3 4 5 6 7 8 alist = [ 1 , 2 , 3 ] blist = [ \"1\" , \"2\" , \"3\" ] print ( 'alist:' , alist ) print ( 'blist:' , blist ) if alist == blist : print ( \"\u5169\u500b\u4e32\u5217\u5167\u5bb9\u76f8\u540c\" ) else : print ( \"\u5169\u500b\u4e32\u5217\u5167\u5bb9\u4e0d\u540c\" ) \u6210\u7e3e\u5e73\u5747\u7a4d\u9ede 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # \u5206\u6578\u7bc4\u570d \u6210\u7e3e\u7b49\u7b2c # 90 ~ 100 A # 80 ~ 89 B # 70 ~ 79 C # 60 ~ 69 D # 0 ~ 59 F score = int ( input ( \"\u8f38\u5165\u5206\u6578: \" )) if score >= 90 : grade = 'A' elif score >= 80 : grade = 'B' elif score >= 70 : grade = 'C' elif score >= 60 : grade = 'D' else : grade = 'F' print ( \"\u6210\u7e3e\u7b49\u7b2c:\" , grade ) \u8abf\u6574\u5206\u6578 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # \u4e0b\u5217\u662f\u8abf\u6574\u5206\u6578\u7684\u7a0b\u5f0f\uff1a # \u82e5 score \u8f38\u5165 75 \u4e14 rank \u8f38\u5165 5 # score \u5c07\u8abf\u6574\u70ba\u5e7e\u5206\uff1f score = int ( input ( 'score: ' )) rank = int ( input ( 'rank: ' )) if score > 80 and rank >= 3 : score += 10 if score > 70 and rank > 3 : score += 5 else : score -= 5 print ( score ) \u6574\u6578\u7684\u4f4d\u6578 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 N = int ( input ( \"\u8f38\u5165 1 \u500b\u6574\u6578: \" )) digits = 0 if N > 0 : if N < 10 : digits = 1 elif N < 100 : digits = 2 elif N < 1000 : digits = 3 if digits == 0 : print ( \"\u5927\u65bc 3 \u4f4d\u6578\" ) else : print ( f \" { digits } \u4f4d\u6578\" ) elif N <= 0 : print ( \"\u4e0d\u5224\u65b7\u5c0f\u65bc\u7b49\u65bc 0 \u7684\u6574\u6578\" ) \u79df\u8eca\u8cbb\u7528\u8a08\u7b97 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \"\"\" \u7a0b\u5f0f\u8a2d\u8a08\u5fc5\u9808\u7b26\u5408\u4ee5\u4e0b\u689d\u4ef6\uff1a * \u6bcf\u5929\u8cbb\u7528 100 \u584a * \u665a\u4e0a 11 \u9ede\u4ee5\u5f8c\u6b78\u9084\uff0c\u52a0\u6536\u4e00\u5929\u8cbb\u7528 * \u8d77\u79df\u65e5\u662f\u661f\u671f\u65e5\uff0c\u53ef\u4eab 10% \u7684\u6298\u6263 * \u8d77\u79df\u65e5\u662f\u661f\u671f\u4e09\uff0c\u53ef\u4eab 20% \u7684\u6298\u6263 \"\"\" rate = 100 is_ontime = input ( \"\u662f\u5426\u5728\u665a\u4e0a 11 \u9ede\u4ee5\u524d\u6b78\u9084(\u8f38\u5165 y \u6216 n): \" ) days = int ( input ( \"\u79df\u7528\u5929\u6578: \" )) day_from = input ( \"\u661f\u671f\u5e7e\u958b\u59cb\u79df(\u8f38\u5165\u661f\u671f\u7684\u82f1\u6587): \" ) . capitalize () # \u662f\u5426\u52a0\u6536\u4e00\u5929\u8cbb\u7528 if is_ontime == \"n\" : days += 1 # \u8d77\u79df\u65e5\u662f\u5426\u4eab\u6709\u6298\u6263 if day_from == \"Sunday\" : total = days * rate * 0.9 elif day_from == \"Wednesday\" : total = days * rate * 0.8 else : total = days * rate print ( f \"\u79df\u8eca\u8cbb\u7528: $ { int ( total ) } \" ) \u6bd4\u8f03\u5169\u500b\u6578\u5b57 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 01 n1 = eval ( input ( \"\u8f38\u5165\u7b2c1\u500b\u6578: \" )) 02 n2 = eval ( input ( \"\u8f38\u5165\u7b2c2\u500b\u6578: \" )) 03 if n1 = n2 : 04 print ( \"\u6578\u5b571\u7b49\u65bc\u6578\u5b572\" ) 05 if n1 <= n2 : 06 print ( \"\u6578\u5b571\u6bd4\u6578\u5b572\u5c0f\" ) 07 if n1 > n2 : 08 print ( \"\u6578\u5b571\u6bd4\u6578\u5b572\u5927\" ) 09 if n1 <> n2 : 10 print ( \"\u6578\u5b571\u4e0d\u7b49\u65bc\u6578\u5b572\" ) \"\"\" # \u91dd\u5c0d\u4e0b\u5217\u6558\u8ff0\uff0c\u6b63\u78ba\u7684\u9078 Yes\uff0c\u5426\u5247\u9078 No A. 03 \u884c\uff1a\u4e0d\u6b63\u78ba\u7684\u6bd4\u8f03\u904b\u7b97 B. 06 \u884c\uff1a\u53ea\u6709 n1 \u5c0f\u65bc n2 \u6642\u624d\u6703\u8f38\u51fa C. 08 \u884c\uff1a\u53ea\u6709 n1 \u5927\u65bc n2 \u6642\u624d\u6703\u8f38\u51fa D. 09 \u884c\uff1a\u4e0d\u6b63\u78ba\u7684\u6bd4\u8f03\u904b\u7b97 \"\"\" \u54e1\u5de5\u52a0\u85aa 1 2 3 4 5 6 7 8 9 10 11 salary_list = [ 760000 , 580000 , 460000 , 487000 , 810000 , 385000 , 412000 , 660000 , ] # \u4ee5 for \u8ff4\u5708\u9010\u4e00\u8b80\u53d6\u6240\u6709\u85aa\u8cc7 for i in range ( len ( salary_list )): if salary_list [ i ] >= 600000 : continue # \u4f4e\u65bc 60 \u842c\u7684\u85aa\u8cc7\uff0c\u52a0\u85aa 6% salary_list [ i ] = ( salary_list [ i ] * 1.06 ) print ( f '\u54e1\u5de5\u7de8\u865f: { i + 1 } \u52a0\u85aa\u5f8c\u7684\u85aa\u8cc7: { salary_list [ i ] } ' ) \u731c\u6578\u5b57\u904a\u6232 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 from random import randint # \u96fb\u8166\u5f9e 1 \u5230 10 \u9078\u4e00\u500b\u6578\u5b57\uff0c\u5b58\u5230 target target = randint ( 1 , 10 ) # \u8a2d\u5b9a\u6700\u591a\u731c\u6e2c\u6b21\u6578\uff0c\u5b58\u5230 limit limit = 3 # \u731c\u6e2c\u7684\u6b21\u6578 i = 1 print ( f \"\u5f9e 1 \u5230 10 \u731c\u4e00\u500b\u6578\u5b57\uff0c\u6700\u591a\u80fd\u731c { limit } \u6b21\" ) while i <= limit : guess = int ( input ( \"\u8f38\u5165\u6578\u5b57: \" )) if guess > target : print ( \"\u6bd4\u7b54\u6848\u5927\uff01\" ) elif guess < target : print ( \"\u6bd4\u7b54\u6848\u5c0f\uff01\" ) else : print ( \"\u606d\u559c\u731c\u5c0d\uff01\" ) break i += 1 print () \u6aa2\u67e5\u5b78\u865f 1 2 3 4 5 6 7 8 9 10 11 12 13 student_id = \"nobody\" while student_id != \"\" : is_valid = False student_id = input ( \"\u8f38\u5165\u5b78\u865f(ddd-dd-dd): \" ) sid = student_id . split ( '-' ) if len ( sid ) == 3 : p1 = sid [ 0 ] p2 = sid [ 1 ] p3 = sid [ 2 ] if len ( p1 ) == 3 and len ( p2 ) == 2 and len ( p3 ) == 2 : if p1 . isdigit () and p2 . isdigit () and p3 . isdigit (): is_valid = True print ( student_id , is_valid ) \u8cea\u6578\u5224\u65b7\u2605\u2605 1 2 3 4 \"\"\" \u2605 \u8f38\u5165 1 \u500b\u6574\u6578\uff0c\u5b58\u5230\u8b8a\u6578 N\uff0c\u8f38\u51fa N \u662f\u5426\u70ba\u8cea\u6578 \u2605 \u8f38\u5165 2 \u500b\u6574\u6578\uff0c\u5b58\u5230\u8b8a\u6578 A \u548c B\uff0c\u8f38\u51fa A \u5230 B \u4e4b\u9593\u7684\u6240\u6709\u8cea\u6578 \"\"\" \u5c0b\u627e\u6578\u5b57\u2605\u2605 1 2 3 4 \"\"\" \u2605 \u5c07 10 \u500b\u96a8\u6a5f\u6574\u6578\u653e\u5230\u4e32\u5217\uff0c\u8f38\u51fa\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c \u2605 \u8f38\u5165 1 \u500b\u6574\u6578 N\uff0c\u5f9e\u96a8\u6a5f\u6574\u6578\u4e32\u5217\u4e2d\u627e\u51fa\u6bd4 N \u9084\u8981\u5927\u4e14\u6700\u63a5\u8fd1 N \u7684\u6578 \"\"\"","title":"2.\u6c7a\u7b56\u548c\u8ff4\u5708"},{"location":"ch02/#2","text":"\u63a7\u5236\u5e36\u6709\u6c7a\u7b56\u548c\u8ff4\u5708\u7684\u6d41\u7a0b","title":"2.\u6c7a\u7b56\u548c\u8ff4\u5708"},{"location":"ch02/#_1","text":"1 2 3 4 5 6 7 8 brand_name = input ( \"\u8f38\u5165\u54c1\u724c\u82f1\u6587\u540d\u5b57: \" ) if brand_name . upper () == brand_name : print ( \"\u5168\u90e8\u5927\u5beb\" ) elif brand_name . lower () == brand_name : print ( \"\u5168\u90e8\u5c0f\u5beb\" ) else : print ( '\u5927\u5beb\u5c0f\u5beb\u90fd\u6709' )","title":"\u54c1\u724c\u82f1\u6587\u5927\u5c0f\u5beb"},{"location":"ch02/#_2","text":"1 2 3 4 5 6 7 8 alist = [ 1 , 2 , 3 ] blist = [ \"1\" , \"2\" , \"3\" ] print ( 'alist:' , alist ) print ( 'blist:' , blist ) if alist == blist : print ( \"\u5169\u500b\u4e32\u5217\u5167\u5bb9\u76f8\u540c\" ) else : print ( \"\u5169\u500b\u4e32\u5217\u5167\u5bb9\u4e0d\u540c\" )","title":"\u4e32\u5217\u5167\u5bb9\u6bd4\u8f03"},{"location":"ch02/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # \u5206\u6578\u7bc4\u570d \u6210\u7e3e\u7b49\u7b2c # 90 ~ 100 A # 80 ~ 89 B # 70 ~ 79 C # 60 ~ 69 D # 0 ~ 59 F score = int ( input ( \"\u8f38\u5165\u5206\u6578: \" )) if score >= 90 : grade = 'A' elif score >= 80 : grade = 'B' elif score >= 70 : grade = 'C' elif score >= 60 : grade = 'D' else : grade = 'F' print ( \"\u6210\u7e3e\u7b49\u7b2c:\" , grade )","title":"\u6210\u7e3e\u5e73\u5747\u7a4d\u9ede"},{"location":"ch02/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # \u4e0b\u5217\u662f\u8abf\u6574\u5206\u6578\u7684\u7a0b\u5f0f\uff1a # \u82e5 score \u8f38\u5165 75 \u4e14 rank \u8f38\u5165 5 # score \u5c07\u8abf\u6574\u70ba\u5e7e\u5206\uff1f score = int ( input ( 'score: ' )) rank = int ( input ( 'rank: ' )) if score > 80 and rank >= 3 : score += 10 if score > 70 and rank > 3 : score += 5 else : score -= 5 print ( score )","title":"\u8abf\u6574\u5206\u6578"},{"location":"ch02/#_5","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 N = int ( input ( \"\u8f38\u5165 1 \u500b\u6574\u6578: \" )) digits = 0 if N > 0 : if N < 10 : digits = 1 elif N < 100 : digits = 2 elif N < 1000 : digits = 3 if digits == 0 : print ( \"\u5927\u65bc 3 \u4f4d\u6578\" ) else : print ( f \" { digits } \u4f4d\u6578\" ) elif N <= 0 : print ( \"\u4e0d\u5224\u65b7\u5c0f\u65bc\u7b49\u65bc 0 \u7684\u6574\u6578\" )","title":"\u6574\u6578\u7684\u4f4d\u6578"},{"location":"ch02/#_6","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \"\"\" \u7a0b\u5f0f\u8a2d\u8a08\u5fc5\u9808\u7b26\u5408\u4ee5\u4e0b\u689d\u4ef6\uff1a * \u6bcf\u5929\u8cbb\u7528 100 \u584a * \u665a\u4e0a 11 \u9ede\u4ee5\u5f8c\u6b78\u9084\uff0c\u52a0\u6536\u4e00\u5929\u8cbb\u7528 * \u8d77\u79df\u65e5\u662f\u661f\u671f\u65e5\uff0c\u53ef\u4eab 10% \u7684\u6298\u6263 * \u8d77\u79df\u65e5\u662f\u661f\u671f\u4e09\uff0c\u53ef\u4eab 20% \u7684\u6298\u6263 \"\"\" rate = 100 is_ontime = input ( \"\u662f\u5426\u5728\u665a\u4e0a 11 \u9ede\u4ee5\u524d\u6b78\u9084(\u8f38\u5165 y \u6216 n): \" ) days = int ( input ( \"\u79df\u7528\u5929\u6578: \" )) day_from = input ( \"\u661f\u671f\u5e7e\u958b\u59cb\u79df(\u8f38\u5165\u661f\u671f\u7684\u82f1\u6587): \" ) . capitalize () # \u662f\u5426\u52a0\u6536\u4e00\u5929\u8cbb\u7528 if is_ontime == \"n\" : days += 1 # \u8d77\u79df\u65e5\u662f\u5426\u4eab\u6709\u6298\u6263 if day_from == \"Sunday\" : total = days * rate * 0.9 elif day_from == \"Wednesday\" : total = days * rate * 0.8 else : total = days * rate print ( f \"\u79df\u8eca\u8cbb\u7528: $ { int ( total ) } \" )","title":"\u79df\u8eca\u8cbb\u7528\u8a08\u7b97"},{"location":"ch02/#_7","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 01 n1 = eval ( input ( \"\u8f38\u5165\u7b2c1\u500b\u6578: \" )) 02 n2 = eval ( input ( \"\u8f38\u5165\u7b2c2\u500b\u6578: \" )) 03 if n1 = n2 : 04 print ( \"\u6578\u5b571\u7b49\u65bc\u6578\u5b572\" ) 05 if n1 <= n2 : 06 print ( \"\u6578\u5b571\u6bd4\u6578\u5b572\u5c0f\" ) 07 if n1 > n2 : 08 print ( \"\u6578\u5b571\u6bd4\u6578\u5b572\u5927\" ) 09 if n1 <> n2 : 10 print ( \"\u6578\u5b571\u4e0d\u7b49\u65bc\u6578\u5b572\" ) \"\"\" # \u91dd\u5c0d\u4e0b\u5217\u6558\u8ff0\uff0c\u6b63\u78ba\u7684\u9078 Yes\uff0c\u5426\u5247\u9078 No A. 03 \u884c\uff1a\u4e0d\u6b63\u78ba\u7684\u6bd4\u8f03\u904b\u7b97 B. 06 \u884c\uff1a\u53ea\u6709 n1 \u5c0f\u65bc n2 \u6642\u624d\u6703\u8f38\u51fa C. 08 \u884c\uff1a\u53ea\u6709 n1 \u5927\u65bc n2 \u6642\u624d\u6703\u8f38\u51fa D. 09 \u884c\uff1a\u4e0d\u6b63\u78ba\u7684\u6bd4\u8f03\u904b\u7b97 \"\"\"","title":"\u6bd4\u8f03\u5169\u500b\u6578\u5b57"},{"location":"ch02/#_8","text":"1 2 3 4 5 6 7 8 9 10 11 salary_list = [ 760000 , 580000 , 460000 , 487000 , 810000 , 385000 , 412000 , 660000 , ] # \u4ee5 for \u8ff4\u5708\u9010\u4e00\u8b80\u53d6\u6240\u6709\u85aa\u8cc7 for i in range ( len ( salary_list )): if salary_list [ i ] >= 600000 : continue # \u4f4e\u65bc 60 \u842c\u7684\u85aa\u8cc7\uff0c\u52a0\u85aa 6% salary_list [ i ] = ( salary_list [ i ] * 1.06 ) print ( f '\u54e1\u5de5\u7de8\u865f: { i + 1 } \u52a0\u85aa\u5f8c\u7684\u85aa\u8cc7: { salary_list [ i ] } ' )","title":"\u54e1\u5de5\u52a0\u85aa"},{"location":"ch02/#_9","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 from random import randint # \u96fb\u8166\u5f9e 1 \u5230 10 \u9078\u4e00\u500b\u6578\u5b57\uff0c\u5b58\u5230 target target = randint ( 1 , 10 ) # \u8a2d\u5b9a\u6700\u591a\u731c\u6e2c\u6b21\u6578\uff0c\u5b58\u5230 limit limit = 3 # \u731c\u6e2c\u7684\u6b21\u6578 i = 1 print ( f \"\u5f9e 1 \u5230 10 \u731c\u4e00\u500b\u6578\u5b57\uff0c\u6700\u591a\u80fd\u731c { limit } \u6b21\" ) while i <= limit : guess = int ( input ( \"\u8f38\u5165\u6578\u5b57: \" )) if guess > target : print ( \"\u6bd4\u7b54\u6848\u5927\uff01\" ) elif guess < target : print ( \"\u6bd4\u7b54\u6848\u5c0f\uff01\" ) else : print ( \"\u606d\u559c\u731c\u5c0d\uff01\" ) break i += 1 print ()","title":"\u731c\u6578\u5b57\u904a\u6232"},{"location":"ch02/#_10","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 student_id = \"nobody\" while student_id != \"\" : is_valid = False student_id = input ( \"\u8f38\u5165\u5b78\u865f(ddd-dd-dd): \" ) sid = student_id . split ( '-' ) if len ( sid ) == 3 : p1 = sid [ 0 ] p2 = sid [ 1 ] p3 = sid [ 2 ] if len ( p1 ) == 3 and len ( p2 ) == 2 and len ( p3 ) == 2 : if p1 . isdigit () and p2 . isdigit () and p3 . isdigit (): is_valid = True print ( student_id , is_valid )","title":"\u6aa2\u67e5\u5b78\u865f"},{"location":"ch02/#_11","text":"1 2 3 4 \"\"\" \u2605 \u8f38\u5165 1 \u500b\u6574\u6578\uff0c\u5b58\u5230\u8b8a\u6578 N\uff0c\u8f38\u51fa N \u662f\u5426\u70ba\u8cea\u6578 \u2605 \u8f38\u5165 2 \u500b\u6574\u6578\uff0c\u5b58\u5230\u8b8a\u6578 A \u548c B\uff0c\u8f38\u51fa A \u5230 B \u4e4b\u9593\u7684\u6240\u6709\u8cea\u6578 \"\"\"","title":"\u8cea\u6578\u5224\u65b7\u2605\u2605"},{"location":"ch02/#_12","text":"1 2 3 4 \"\"\" \u2605 \u5c07 10 \u500b\u96a8\u6a5f\u6574\u6578\u653e\u5230\u4e32\u5217\uff0c\u8f38\u51fa\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c \u2605 \u8f38\u5165 1 \u500b\u6574\u6578 N\uff0c\u5f9e\u96a8\u6a5f\u6574\u6578\u4e32\u5217\u4e2d\u627e\u51fa\u6bd4 N \u9084\u8981\u5927\u4e14\u6700\u63a5\u8fd1 N \u7684\u6578 \"\"\"","title":"\u5c0b\u627e\u6578\u5b57\u2605\u2605"},{"location":"ch03/","text":"3.\u8f38\u5165\u548c\u8f38\u51fa \u57f7\u884c\u8f38\u5165\u548c\u8f38\u51fa\u64cd\u4f5c \u6d6e\u9ede\u6578\u683c\u5f0f 1 2 3 num = 123456.789 print ( ' {:.2f} ' . format ( num )) print ( ' {:,.2f} ' . format ( num )) \u65e5\u671f\u683c\u5f0f 1 2 3 4 import datetime adate = datetime . datetime ( 2023 , 1 , 15 ) print ( '{:%m- %d -%y}' . format ( adate )) print ( '{:%m- %d -%Y}' . format ( adate )) \u8a08\u7b97\u5e73\u5747\u5206\u6578 1 2 3 4 5 6 7 8 9 10 11 12 name = input ( \"\u8acb\u8f38\u5165\u540d\u5b57: \" ) total = score = count = 0 while ( score != - 1 ): score = int ( input ( \"\u8f38\u5165\u5206\u6578\uff0c\u8f38\u5165 -1 \u5247\u7d50\u675f: \" )) if score == - 1 : break total += score count += 1 average = total / count # %-20s: \u9760\u5de6\u5c0d\u9f4a\uff0c\u6b04\u4f4d\u56fa\u5b9a\u5bec\u5ea6 20 \u5b57\u5143 # %6.2f: \u6b04\u4f4d\u7e3d\u5bec\u5ea6 6 \u500b\u5b57\u5143\uff0c\u5c0f\u6578\u4fdd\u7559 2 \u4f4d print ( \" %-20s \u7684\u5e73\u5747\u5206\u6578: %6.2f \" % ( name , average )) \u5e73\u5747\u661f\u7d1a\u8a55\u7b49 1 2 3 4 5 6 7 8 9 10 11 total = count = done = 0 while ( done != - 1 ): rating = float ( input ( \"\u8f38\u5165\u8a55\u7b49(1-5)\uff0c\u8f38\u5165 -1 \u5247\u7d50\u675f: \" )) if rating == - 1 : break total += rating count += 1 average = float ( total / count ) print ( \"\u5e73\u5747\u661f\u7d1a\u8a55\u7b49: \" + format ( average , '.2f' )) print ( \"\u5e73\u5747\u661f\u7d1a\u8a55\u7b49: {:.2f} \" . format ( average )) print ( f \"\u5e73\u5747\u661f\u7d1a\u8a55\u7b49: { average : .2f } \" ) \u5916\u532f\u63db\u7b97 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 def print_table ( data , money ): for row in data : fields = row . split ( \",\" ) fields [ 1 ] = money / eval ( fields [ 1 ]) fields [ 2 ] = money * eval ( fields [ 2 ]) print ( \" {0:30} {1:8.1f} {2:11.2f} \" . format ( fields [ 0 ], fields [ 1 ], fields [ 2 ])) # \u5e63\u5225,\u8cb7\u5165\u532f\u7387,\u8ce3\u51fa\u532f\u7387 exchange_rates = [ \"USD(United States Dollar),29.98,30.65\" , \"JPY(Japanese Yen),0.2284,0.2412\" , \"EUR(Euro),32.1,33.44\" , \"KRW(Korean Won),0.02281,0.02671\" , \"CNY(Chinese Yuan Renminbi),4.434,4.596\" ] print_table ( exchange_rates , 1000 ) \u5b57\u4e32\u683c\u5f0f\u5316\u53c3\u6578\u9806\u5e8f 1 2 3 4 5 a = 'Apple' b = 'Banana' c = 'Cherry' fruit = \" {1} , {0} and {2} \" print ( fruit . format ( a , b , c )) \u8f38\u51fa\u6a94\u6848\u7b2c\u4e00\u884c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \"\"\" \u6a94\u6848\u8655\u7406\u51fd\u5f0f\u8a2d\u8a08\u5fc5\u9808\u7b26\u5408\u4ee5\u4e0b\u689d\u4ef6\uff1a * \u5982\u679c\u6307\u5b9a\u6a94\u6848\u4e0d\u5b58\u5728\uff0c\u56de\u50b3 \"\u6a94\u6848\u4e0d\u5b58\u5728\" * \u5982\u679c\u8a72\u6a94\u6848\u5b58\u5728\uff0c\u56de\u50b3\u7b2c\u4e00\u884c\u5167\u5bb9 \"\"\" import os def get_first_line_of_file ( fname ): if os . path . isfile ( fname ): with open ( fname , 'r' ) as fho : return fho . readline () else : return \"\u6a94\u6848\u4e0d\u5b58\u5728\" print ( get_first_line_of_file ( 'data1.txt' )) print ( get_first_line_of_file ( 'data2.txt' )) \u8b80\u53d6\u92b7\u552e\u8cc7\u6599 \u6e2c\u8cc7\u6a94 1 2 3 4 5 6 7 'A01', 180, 1 'A02', 240, 5 'B01', 195, 3 'B02', 215, 4 'C01', 360, 2 \u7a0b\u5f0f\u6a94 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \"\"\" \u6a94\u6848\u8655\u7406\u8a2d\u8a08\u5fc5\u9808\u7b26\u5408\u4ee5\u4e0b\u689d\u4ef6\uff1a * \u6a94\u6848\u6709\u591a\u884c\uff0c\u4e00\u884c\u4e00\u7b46\u92b7\u552e\u8cc7\u6599 * \u8cc7\u6599\u6b04\u4f4d\u5305\u542b\uff1a\u7522\u54c1\u7de8\u865f\u3001\u7522\u54c1\u55ae\u50f9\u3001\u8cfc\u8cb7\u6578\u91cf * \u6a94\u6848\u7684\u6bcf\u4e00\u884c\u90fd\u5fc5\u9808\u8b80\u53d6\u548c\u8f38\u51fa * \u53ef\u80fd\u6709\u7a7a\u884c\uff0c\u9047\u5230\u7a7a\u884c\u5247\u7565\u904e\u8b80\u53d6\u548c\u8f38\u51fa * \u8b80\u53d6\u5b8c\u7562\u5f8c\uff0c\u5fc5\u9808\u95dc\u9589\u6a94\u6848 \"\"\" fho = open ( 'data.txt' , 'r' ) while True : line = fho . readline () if line != '' : if line != ' \\n ' : print ( line . strip ()) else : print ( \"End of File\" ) break fho . close () \u8393\u679c\u92b7\u552e\u6578\u91cf\u2605 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \"\"\" \u8f38\u51fa\u683c\u5f0f\u8981\u6c42\uff1a \u6c34\u679c\u540d\u7a31\u5169\u5074\u6a19\u5b57\u4e32\u96d9\u5f15\u865f\u4e4b\u5f8c\u63a5\u4e00\u500b\u82f1\u6587\u5192\u865f\u53ca\u7a7a\u767d\uff0c\u518d\u63a5\u6578\u91cf \u4f8b\u5982\uff1a \"strawberry\": 4 \"blackberry\": 7 \"blueberry\": 5 \"raspberry\": 4 \"\"\" fruit_list = [ 'strawberry' , 'blackberry' , 'blackberry' , 'blueberry' , 'blueberry' , 'raspberry' , 'blueberry' , 'blackberry' , 'strawberry' , 'raspberry' , 'blueberry' , 'strawberry' , 'raspberry' , 'blackberry' , 'blueberry' , 'blackberry' , 'blackberry' , 'blueberry' , 'raspberry' , 'blackberry' ] \u6a94\u6848\u9644\u52a0\u5167\u5bb9\u2605 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \"\"\" \u6a94\u6848\u8655\u7406\u8a2d\u8a08\u5fc5\u9808\u7b26\u5408\u4ee5\u4e0b\u689d\u4ef6\uff1a * \u6aa2\u67e5\u6307\u5b9a\u6a94\u6848\u662f\u5426\u5b58\u5728 * \u5982\u679c\u8a72\u6a94\u6848\u5b58\u5728\uff0c\u5c31\u986f\u793a\u6a94\u6848\u5167\u5bb9 * \u5982\u679c\u8a72\u6a94\u6848\u4e0d\u5b58\u5728\uff0c\u5c31\u4f7f\u7528\u6307\u5b9a\u540d\u7a31\u65b0\u589e\u6a94\u6848 * \u5728\u6a94\u6848\u6700\u5f8c\u52a0\u5165\u5b57\u4e32\uff1a\"End of File\" \"\"\" import os fname = 'data.txt' if os . path . isfile ( fname ): fho = open ( fname ) print ( fho . read ()) fho . close () # r, r+, a, a+, w, w+, x, x+ \u7684\u5dee\u7570 fho = open ( fname , 'a' ) fho . write ( \"End of File\" ) fho . close ()","title":"3.\u8f38\u5165\u548c\u8f38\u51fa"},{"location":"ch03/#3","text":"\u57f7\u884c\u8f38\u5165\u548c\u8f38\u51fa\u64cd\u4f5c","title":"3.\u8f38\u5165\u548c\u8f38\u51fa"},{"location":"ch03/#_1","text":"1 2 3 num = 123456.789 print ( ' {:.2f} ' . format ( num )) print ( ' {:,.2f} ' . format ( num ))","title":"\u6d6e\u9ede\u6578\u683c\u5f0f"},{"location":"ch03/#_2","text":"1 2 3 4 import datetime adate = datetime . datetime ( 2023 , 1 , 15 ) print ( '{:%m- %d -%y}' . format ( adate )) print ( '{:%m- %d -%Y}' . format ( adate ))","title":"\u65e5\u671f\u683c\u5f0f"},{"location":"ch03/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 name = input ( \"\u8acb\u8f38\u5165\u540d\u5b57: \" ) total = score = count = 0 while ( score != - 1 ): score = int ( input ( \"\u8f38\u5165\u5206\u6578\uff0c\u8f38\u5165 -1 \u5247\u7d50\u675f: \" )) if score == - 1 : break total += score count += 1 average = total / count # %-20s: \u9760\u5de6\u5c0d\u9f4a\uff0c\u6b04\u4f4d\u56fa\u5b9a\u5bec\u5ea6 20 \u5b57\u5143 # %6.2f: \u6b04\u4f4d\u7e3d\u5bec\u5ea6 6 \u500b\u5b57\u5143\uff0c\u5c0f\u6578\u4fdd\u7559 2 \u4f4d print ( \" %-20s \u7684\u5e73\u5747\u5206\u6578: %6.2f \" % ( name , average ))","title":"\u8a08\u7b97\u5e73\u5747\u5206\u6578"},{"location":"ch03/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 total = count = done = 0 while ( done != - 1 ): rating = float ( input ( \"\u8f38\u5165\u8a55\u7b49(1-5)\uff0c\u8f38\u5165 -1 \u5247\u7d50\u675f: \" )) if rating == - 1 : break total += rating count += 1 average = float ( total / count ) print ( \"\u5e73\u5747\u661f\u7d1a\u8a55\u7b49: \" + format ( average , '.2f' )) print ( \"\u5e73\u5747\u661f\u7d1a\u8a55\u7b49: {:.2f} \" . format ( average )) print ( f \"\u5e73\u5747\u661f\u7d1a\u8a55\u7b49: { average : .2f } \" )","title":"\u5e73\u5747\u661f\u7d1a\u8a55\u7b49"},{"location":"ch03/#_5","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 def print_table ( data , money ): for row in data : fields = row . split ( \",\" ) fields [ 1 ] = money / eval ( fields [ 1 ]) fields [ 2 ] = money * eval ( fields [ 2 ]) print ( \" {0:30} {1:8.1f} {2:11.2f} \" . format ( fields [ 0 ], fields [ 1 ], fields [ 2 ])) # \u5e63\u5225,\u8cb7\u5165\u532f\u7387,\u8ce3\u51fa\u532f\u7387 exchange_rates = [ \"USD(United States Dollar),29.98,30.65\" , \"JPY(Japanese Yen),0.2284,0.2412\" , \"EUR(Euro),32.1,33.44\" , \"KRW(Korean Won),0.02281,0.02671\" , \"CNY(Chinese Yuan Renminbi),4.434,4.596\" ] print_table ( exchange_rates , 1000 )","title":"\u5916\u532f\u63db\u7b97"},{"location":"ch03/#_6","text":"1 2 3 4 5 a = 'Apple' b = 'Banana' c = 'Cherry' fruit = \" {1} , {0} and {2} \" print ( fruit . format ( a , b , c ))","title":"\u5b57\u4e32\u683c\u5f0f\u5316\u53c3\u6578\u9806\u5e8f"},{"location":"ch03/#_7","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \"\"\" \u6a94\u6848\u8655\u7406\u51fd\u5f0f\u8a2d\u8a08\u5fc5\u9808\u7b26\u5408\u4ee5\u4e0b\u689d\u4ef6\uff1a * \u5982\u679c\u6307\u5b9a\u6a94\u6848\u4e0d\u5b58\u5728\uff0c\u56de\u50b3 \"\u6a94\u6848\u4e0d\u5b58\u5728\" * \u5982\u679c\u8a72\u6a94\u6848\u5b58\u5728\uff0c\u56de\u50b3\u7b2c\u4e00\u884c\u5167\u5bb9 \"\"\" import os def get_first_line_of_file ( fname ): if os . path . isfile ( fname ): with open ( fname , 'r' ) as fho : return fho . readline () else : return \"\u6a94\u6848\u4e0d\u5b58\u5728\" print ( get_first_line_of_file ( 'data1.txt' )) print ( get_first_line_of_file ( 'data2.txt' ))","title":"\u8f38\u51fa\u6a94\u6848\u7b2c\u4e00\u884c"},{"location":"ch03/#_8","text":"\u6e2c\u8cc7\u6a94 1 2 3 4 5 6 7 'A01', 180, 1 'A02', 240, 5 'B01', 195, 3 'B02', 215, 4 'C01', 360, 2 \u7a0b\u5f0f\u6a94 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \"\"\" \u6a94\u6848\u8655\u7406\u8a2d\u8a08\u5fc5\u9808\u7b26\u5408\u4ee5\u4e0b\u689d\u4ef6\uff1a * \u6a94\u6848\u6709\u591a\u884c\uff0c\u4e00\u884c\u4e00\u7b46\u92b7\u552e\u8cc7\u6599 * \u8cc7\u6599\u6b04\u4f4d\u5305\u542b\uff1a\u7522\u54c1\u7de8\u865f\u3001\u7522\u54c1\u55ae\u50f9\u3001\u8cfc\u8cb7\u6578\u91cf * \u6a94\u6848\u7684\u6bcf\u4e00\u884c\u90fd\u5fc5\u9808\u8b80\u53d6\u548c\u8f38\u51fa * \u53ef\u80fd\u6709\u7a7a\u884c\uff0c\u9047\u5230\u7a7a\u884c\u5247\u7565\u904e\u8b80\u53d6\u548c\u8f38\u51fa * \u8b80\u53d6\u5b8c\u7562\u5f8c\uff0c\u5fc5\u9808\u95dc\u9589\u6a94\u6848 \"\"\" fho = open ( 'data.txt' , 'r' ) while True : line = fho . readline () if line != '' : if line != ' \\n ' : print ( line . strip ()) else : print ( \"End of File\" ) break fho . close ()","title":"\u8b80\u53d6\u92b7\u552e\u8cc7\u6599"},{"location":"ch03/#_9","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \"\"\" \u8f38\u51fa\u683c\u5f0f\u8981\u6c42\uff1a \u6c34\u679c\u540d\u7a31\u5169\u5074\u6a19\u5b57\u4e32\u96d9\u5f15\u865f\u4e4b\u5f8c\u63a5\u4e00\u500b\u82f1\u6587\u5192\u865f\u53ca\u7a7a\u767d\uff0c\u518d\u63a5\u6578\u91cf \u4f8b\u5982\uff1a \"strawberry\": 4 \"blackberry\": 7 \"blueberry\": 5 \"raspberry\": 4 \"\"\" fruit_list = [ 'strawberry' , 'blackberry' , 'blackberry' , 'blueberry' , 'blueberry' , 'raspberry' , 'blueberry' , 'blackberry' , 'strawberry' , 'raspberry' , 'blueberry' , 'strawberry' , 'raspberry' , 'blackberry' , 'blueberry' , 'blackberry' , 'blackberry' , 'blueberry' , 'raspberry' , 'blackberry' ]","title":"\u8393\u679c\u92b7\u552e\u6578\u91cf\u2605"},{"location":"ch03/#_10","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \"\"\" \u6a94\u6848\u8655\u7406\u8a2d\u8a08\u5fc5\u9808\u7b26\u5408\u4ee5\u4e0b\u689d\u4ef6\uff1a * \u6aa2\u67e5\u6307\u5b9a\u6a94\u6848\u662f\u5426\u5b58\u5728 * \u5982\u679c\u8a72\u6a94\u6848\u5b58\u5728\uff0c\u5c31\u986f\u793a\u6a94\u6848\u5167\u5bb9 * \u5982\u679c\u8a72\u6a94\u6848\u4e0d\u5b58\u5728\uff0c\u5c31\u4f7f\u7528\u6307\u5b9a\u540d\u7a31\u65b0\u589e\u6a94\u6848 * \u5728\u6a94\u6848\u6700\u5f8c\u52a0\u5165\u5b57\u4e32\uff1a\"End of File\" \"\"\" import os fname = 'data.txt' if os . path . isfile ( fname ): fho = open ( fname ) print ( fho . read ()) fho . close () # r, r+, a, a+, w, w+, x, x+ \u7684\u5dee\u7570 fho = open ( fname , 'a' ) fho . write ( \"End of File\" ) fho . close ()","title":"\u6a94\u6848\u9644\u52a0\u5167\u5bb9\u2605"},{"location":"ch04/","text":"4.\u6587\u4ef6\u548c\u7d50\u69cb \u6587\u4ef6\u548c\u7d50\u69cb\u4ee3\u78bc \u8a3b\u89e3\u7b26\u865f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // \u56de\u50b3\u524d\u5341\u540d def get_top10 (): return top10 /* \u56de\u50b3\u524d\u5341\u540d */ def get_top10 (): return top10 ' \u56de\u50b3\u524d\u5341\u540d def get_top10 (): return top10 # \u56de\u50b3\u524d\u5341\u540d def get_top10 (): return top10 \u8a3b\u89e3\u4f4d\u7f6e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 01 # rectangle_area(x, y) \u77e9\u5f62\u9762\u7a4d\u51fd\u5f0f 02 # x \u8868\u793a\u300c\u9577\u300d 03 # y \u8868\u793a\u300c\u5bec\u300d 04 # \u56de\u50b3 x * y \u7684\u503c 05 def rectangle_area ( x , y ): 06 comment = \"\u56de\u50b3 x * y \u7684\u503c\" 07 return x * y # x * y \"\"\" # \u91dd\u5c0d\u4e0b\u5217\u6558\u8ff0\uff0c\u6b63\u78ba\u7684\u9078 Yes\uff0c\u5426\u5247\u9078 No A. 01 \u5230 04 \u884c\u5728\u8a9e\u6cd5\u6aa2\u67e5\u6642\u5c07\u88ab\u5ffd\u7565 B. 02 \u548c 03 \u884c\u4e2d\u7684\u4e95\u5b57\u7b26\u865f(#)\u975e\u5fc5\u586b C. 06 \u884c\u7684\u5b57\u4e32\u5c07\u88ab\u8996\u70ba\u6ce8\u91cb(\u8a3b\u89e3) D. 07 \u884c\u5305\u542b\u5167\u5d4c\u6ce8\u91cb(\u8a3b\u89e3) \"\"\" \u5927\u85af\u7684\u71b1\u91cf\u2605 1 2 3 4 5 6 7 8 9 10 11 12 13 # \u4e0b\u4e00\u884c\u9808\u5b8c\u6210\u7b2c\u4e00\u500b\u51fd\u5f0f\u5ba3\u544a name = input ( \"\u8acb\u8f38\u5165\u4f60\u7684\u540d\u5b57: \" ) return name # \u4e0b\u4e00\u884c\u9808\u5b8c\u6210\u7b2c\u4e8c\u500b\u51fd\u5f0f\u5ba3\u544a calories = ords * cals return calories orders = int ( input ( \"\u8acb\u8f38\u5165\u672c\u9031\u5403\u7684\u5927\u85af\u4efd\u6578: \" )) fries_cals = 543 foodie = get_name () calories = get_calories ( orders , fries_cals ) print ( foodie , \"\u672c\u9031\u5149\u662f\u5403\u5927\u85af\u5c31\u5403\u5230\u4e86\" , calories , \"\u5927\u5361\" ) \u52a0\u8cfc\u904a\u6232\u9ede\u6578\u2605 1 2 3 4 5 6 7 8 9 10 11 12 13 14 \"\"\" \u51fd\u5f0f\u8a2d\u8a08\u5fc5\u9808\u7b26\u5408\u4ee5\u4e0b\u689d\u4ef6\uff1a * \u51fd\u5f0f\u540d\u7a31\u70ba add_points * \u51fd\u5f0f\u63a5\u6536\u5169\u500b\u53c3\u6578\uff1a\u76ee\u524d\u9ede\u6578\u548c\u52a0\u8cfc\u9ede\u6578 * \u51fd\u5f0f\u5c07\u52a0\u8cfc\u9ede\u6578\u589e\u52a0\u5230\u76ee\u524d\u9ede\u6578 * \u51fd\u5f0f\u56de\u50b3\u65b0\u9ede\u6578 \"\"\" # \u4e0b\u4e00\u884c\u9808\u5b8c\u6210\u51fd\u5f0f\u5ba3\u544a current += point # \u4e0b\u4e00\u884c\u9808\u56de\u50b3\u76ee\u524d\u7d2f\u7a4d\u9ede\u6578 print ( add_points ( 25 , 100 )) \u96f6\u8207\u6b63\u8ca0\u6574\u6578 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # n \u662f\u8ca0\u6578\uff0c\u56de\u50b3 \"n \u662f\u8ca0\u6578\" # n \u4e0d\u662f\u8ca0\u6578\uff0c\u5728\u689d\u4ef6\u4e0d\u6210\u7acb\u7684\u60c5\u6cc1\u4e0b\uff0c\u65bc\u4e0b\u4e00\u5c64\u7e7c\u7e8c\u5224\u65b7 # \u627f\u4e0a\uff0cn \u5927\u65bc 0\uff0c\u5247\u56de\u50b3 \"n \u662f\u8ca0\u6578\"\uff0c\u5426\u5247\u56de\u50b3 \"n \u662f\u96f6\" def check_integer ( n ): if n < 0 : result = f \" { n } \u662f\u8ca0\u6578\" else : if n > 0 : result = f \" { n } \u662f\u6b63\u6578\" else : result = f \" { n } \u662f\u96f6\" return result print ( check_integer ( 7 )) print ( check_integer ( 0 )) print ( check_integer ( - 7 )) \u6377\u904b\u6298\u6263\u8a08\u7b97 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # \u6377\u904b\u6298\u6263\u8a08\u7b97\u51fd\u5f0f # 12 \u6b72\u4ee5\u4e0b\u5c0f\u5b69\u548c 65 \u6b72\u4ee5\u4e0a\u8001\u5e2b\u53ef\u4eab\u534a\u50f9 def get_discount ( kid , elder ): discount = 0.5 if not ( kid or elder ): discount = 0 return discount kid = elder = False age = int ( input ( '\u8f38\u5165\u5e74\u9f61: ' )) price = int ( input ( '\u8f38\u5165\u7968\u50f9: ' )) if age <= 12 : kid = True elif age >= 65 : elder = True print ( price * ( 1 - get_discount ( kid , elder ))) \u96fb\u5f71\u4f9d\u5e74\u9f61\u5206\u7d1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # \u5e74\u9f61\u672a\u77e5\uff0c\u8f38\u51fa\u5b57\u4e32\u8a0a\u606f \"\u672a\u77e5\" # 12 \u6b72\u4ee5\u4e0b\uff0c\u8f38\u51fa\u5b57\u4e32\u8a0a\u606f \"\u666e\u901a\u7d1a\" # 13 \u6b72\u4ee5\u4e0a\uff0c\u4f4e\u65bc 18 \u6b72\uff0c\u8f38\u51fa\u5b57\u4e32\u8a0a\u606f \"\u8f14\u5c0e\u7d1a\" # 18 \u6b72\u4ee5\u4e0a\uff0c\u8f38\u51fa\u5b57\u4e32\u8a0a\u606f \"\u9650\u5236\u7d1a\" def get_rating ( age ): rating = \"\" if age == None : rating = \"\u672a\u77e5\" elif age < 13 : rating = \"\u666e\u901a\u7d1a\" elif age < 18 : rating = \"\u8f14\u5c0e\u7d1a\" else : rating = \"\u9650\u5236\u7d1a\" return rating print ( get_rating ( 18 )) print ( get_rating ( 13 )) print ( get_rating ( 12 )) print ( get_rating ( None )) \u96fb\u5f71\u7968\u50f9\u8a08\u8cbb 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # 18 \u6b72\u4ee5\u4e0a\uff0c\u4e0d\u662f\u5b78\u751f -> 190 \u5143 # 6 \u6b72\u4ee5\u4e0a\uff0c\u4f4e\u65bc 18 \u6b72\uff0c\u4e0d\u662f\u5b78\u751f -> 140 \u5143 # 6 \u6b72\u4ee5\u4e0a\u7684\u5b78\u751f -> 80 \u5143 # \u4f4e\u65bc 6 \u6b72 -> \u514d\u8cbb def ticket_fee ( age , is_student ): fee = 0 if age >= 6 and is_student == True : fee = 80 if age >= 6 and is_student == False : if age < 18 : fee = 140 else : fee = 190 return fee print ( ticket_fee ( 5 , False )) print ( ticket_fee ( 6 , True )) print ( ticket_fee ( 17 , False )) print ( ticket_fee ( 18 , False )) \u4e5d\u4e5d\u4e58\u6cd5\u8868 1 2 3 4 5 6 7 def print_multiplication_table (): for ri in range ( 1 , 10 ): for ci in range ( 1 , 10 ): print ( ci * ri , end = ' ' ) print () print_multiplication_table () \u5b57\u4e32\u5b57\u5143\u5012\u7f6e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def reverse_string ( astr ): result = '' for i in range ( len ( astr ) - 1 , - 1 , - 1 ): result += astr [ i ] return result str1 = reverse_string ( 'apple' ) print ( str1 ) str1 = reverse_string ( str1 ) print ( str1 ) str2 = reverse_string ( '12345' ) print ( str2 ) str2 = reverse_string ( str2 ) print ( str2 ) \u589e\u52a0\u5eab\u5b58\u2605 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \"\"\" \u7a0b\u5f0f\u5fc5\u9808\u7b26\u5408\u4ee5\u4e0b\u689d\u4ef6\uff1a * \u5982\u679c\u6c92\u6709\u70ba\u8b8a\u6578 increment \u6307\u5b9a\u503c\uff0c\u5247 increment \u7b49\u65bc 1 * \u5982\u679c\u8b8a\u6578 isplus \u662f True\uff0c\u90a3\u9ebc increment \u5fc5\u9808\u52a0\u500d \"\"\" # \u7a0b\u5f0f\u78bc\u5982\u4e0b\uff1a 01 def add_inventory ( inventory , isplus , increment ): 02 if isplus == True : 03 increment = increment * 2 04 inventory = inventory + increment 05 return inventory 06 increment = 3 07 inventory = 24 08 new_inventory = add_inventory ( inventory , True , increment ) \"\"\" # \u91dd\u5c0d\u4e0b\u5217\u6558\u8ff0\uff0c\u6b63\u78ba\u7684\u9078 Yes\uff0c\u5426\u5247\u9078 No A. \u70ba\u4e86\u7b26\u5408\u8981\u6c42\u5fc5\u9808\u5c07 01 \u884c\u66f4\u6539\u70ba\uff1a def add_inventory(inventory, isplus, increment=1): B. \u5982\u679c\u67d0\u500b\u53c3\u6578\u5b9a\u7fa9\u9810\u8a2d\u503c\uff0c\u5176\u53f3\u5074\u7684\u4efb\u4f55\u53c3\u6578\u4e5f\u5fc5\u9808\u5b9a\u7fa9\u9810\u8a2d\u503c C. \u5982\u679c\u53ea\u7528\u5169\u500b\u53c3\u6578\u547c\u53eb\u51fd\u5f0f, \u5247\u7b2c\u4e09\u500b\u53c3\u6578\u7684\u503c\u5c07\u70ba None D. 03 \u884c\u7684\u7d50\u679c\u6703\u6539\u8b8a\u5728 06 \u884c\u4e2d\u8b8a\u6578 increment \u7684\u503c \"\"\" \u8a08\u7b97\u5404\u7a2e\u85aa\u8cc7\u2605 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 def get_pay ( salary = 0 , hours = 40 , h_rate = 25 , quantity = 0 , q_rate = 0 ): wage = 0 if quantity > 0 : return quantity * q_rate if salary > 0 : pass if hours > 40 : wage = ( hours - 40 ) * ( 1.5 * h_rate ) return wage + ( 40 * h_rate ) else : wage = hours * h_rate return wage \"\"\" # \u91dd\u5c0d\u4e0b\u5217\u6558\u8ff0\uff0c\u6b63\u78ba\u7684\u9078 Yes\uff0c\u5426\u5247\u9078 No A. \u547c\u53eb get_pay() \u51fd\u5f0f\u6703\u767c\u751f\u932f\u8aa4 B. get_pay(salary=51888) \u4e0d\u6703\u56de\u50b3\u4efb\u4f55\u503c C. get_pay(quantity=600, q_rate=5) \u56de\u50b3\u503c\u70ba 3000 \"\"\"","title":"4.\u6587\u4ef6\u548c\u7d50\u69cb"},{"location":"ch04/#4","text":"\u6587\u4ef6\u548c\u7d50\u69cb\u4ee3\u78bc","title":"4.\u6587\u4ef6\u548c\u7d50\u69cb"},{"location":"ch04/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // \u56de\u50b3\u524d\u5341\u540d def get_top10 (): return top10 /* \u56de\u50b3\u524d\u5341\u540d */ def get_top10 (): return top10 ' \u56de\u50b3\u524d\u5341\u540d def get_top10 (): return top10 # \u56de\u50b3\u524d\u5341\u540d def get_top10 (): return top10","title":"\u8a3b\u89e3\u7b26\u865f"},{"location":"ch04/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 01 # rectangle_area(x, y) \u77e9\u5f62\u9762\u7a4d\u51fd\u5f0f 02 # x \u8868\u793a\u300c\u9577\u300d 03 # y \u8868\u793a\u300c\u5bec\u300d 04 # \u56de\u50b3 x * y \u7684\u503c 05 def rectangle_area ( x , y ): 06 comment = \"\u56de\u50b3 x * y \u7684\u503c\" 07 return x * y # x * y \"\"\" # \u91dd\u5c0d\u4e0b\u5217\u6558\u8ff0\uff0c\u6b63\u78ba\u7684\u9078 Yes\uff0c\u5426\u5247\u9078 No A. 01 \u5230 04 \u884c\u5728\u8a9e\u6cd5\u6aa2\u67e5\u6642\u5c07\u88ab\u5ffd\u7565 B. 02 \u548c 03 \u884c\u4e2d\u7684\u4e95\u5b57\u7b26\u865f(#)\u975e\u5fc5\u586b C. 06 \u884c\u7684\u5b57\u4e32\u5c07\u88ab\u8996\u70ba\u6ce8\u91cb(\u8a3b\u89e3) D. 07 \u884c\u5305\u542b\u5167\u5d4c\u6ce8\u91cb(\u8a3b\u89e3) \"\"\"","title":"\u8a3b\u89e3\u4f4d\u7f6e"},{"location":"ch04/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 # \u4e0b\u4e00\u884c\u9808\u5b8c\u6210\u7b2c\u4e00\u500b\u51fd\u5f0f\u5ba3\u544a name = input ( \"\u8acb\u8f38\u5165\u4f60\u7684\u540d\u5b57: \" ) return name # \u4e0b\u4e00\u884c\u9808\u5b8c\u6210\u7b2c\u4e8c\u500b\u51fd\u5f0f\u5ba3\u544a calories = ords * cals return calories orders = int ( input ( \"\u8acb\u8f38\u5165\u672c\u9031\u5403\u7684\u5927\u85af\u4efd\u6578: \" )) fries_cals = 543 foodie = get_name () calories = get_calories ( orders , fries_cals ) print ( foodie , \"\u672c\u9031\u5149\u662f\u5403\u5927\u85af\u5c31\u5403\u5230\u4e86\" , calories , \"\u5927\u5361\" )","title":"\u5927\u85af\u7684\u71b1\u91cf\u2605"},{"location":"ch04/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 \"\"\" \u51fd\u5f0f\u8a2d\u8a08\u5fc5\u9808\u7b26\u5408\u4ee5\u4e0b\u689d\u4ef6\uff1a * \u51fd\u5f0f\u540d\u7a31\u70ba add_points * \u51fd\u5f0f\u63a5\u6536\u5169\u500b\u53c3\u6578\uff1a\u76ee\u524d\u9ede\u6578\u548c\u52a0\u8cfc\u9ede\u6578 * \u51fd\u5f0f\u5c07\u52a0\u8cfc\u9ede\u6578\u589e\u52a0\u5230\u76ee\u524d\u9ede\u6578 * \u51fd\u5f0f\u56de\u50b3\u65b0\u9ede\u6578 \"\"\" # \u4e0b\u4e00\u884c\u9808\u5b8c\u6210\u51fd\u5f0f\u5ba3\u544a current += point # \u4e0b\u4e00\u884c\u9808\u56de\u50b3\u76ee\u524d\u7d2f\u7a4d\u9ede\u6578 print ( add_points ( 25 , 100 ))","title":"\u52a0\u8cfc\u904a\u6232\u9ede\u6578\u2605"},{"location":"ch04/#_5","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # n \u662f\u8ca0\u6578\uff0c\u56de\u50b3 \"n \u662f\u8ca0\u6578\" # n \u4e0d\u662f\u8ca0\u6578\uff0c\u5728\u689d\u4ef6\u4e0d\u6210\u7acb\u7684\u60c5\u6cc1\u4e0b\uff0c\u65bc\u4e0b\u4e00\u5c64\u7e7c\u7e8c\u5224\u65b7 # \u627f\u4e0a\uff0cn \u5927\u65bc 0\uff0c\u5247\u56de\u50b3 \"n \u662f\u8ca0\u6578\"\uff0c\u5426\u5247\u56de\u50b3 \"n \u662f\u96f6\" def check_integer ( n ): if n < 0 : result = f \" { n } \u662f\u8ca0\u6578\" else : if n > 0 : result = f \" { n } \u662f\u6b63\u6578\" else : result = f \" { n } \u662f\u96f6\" return result print ( check_integer ( 7 )) print ( check_integer ( 0 )) print ( check_integer ( - 7 ))","title":"\u96f6\u8207\u6b63\u8ca0\u6574\u6578"},{"location":"ch04/#_6","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # \u6377\u904b\u6298\u6263\u8a08\u7b97\u51fd\u5f0f # 12 \u6b72\u4ee5\u4e0b\u5c0f\u5b69\u548c 65 \u6b72\u4ee5\u4e0a\u8001\u5e2b\u53ef\u4eab\u534a\u50f9 def get_discount ( kid , elder ): discount = 0.5 if not ( kid or elder ): discount = 0 return discount kid = elder = False age = int ( input ( '\u8f38\u5165\u5e74\u9f61: ' )) price = int ( input ( '\u8f38\u5165\u7968\u50f9: ' )) if age <= 12 : kid = True elif age >= 65 : elder = True print ( price * ( 1 - get_discount ( kid , elder )))","title":"\u6377\u904b\u6298\u6263\u8a08\u7b97"},{"location":"ch04/#_7","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # \u5e74\u9f61\u672a\u77e5\uff0c\u8f38\u51fa\u5b57\u4e32\u8a0a\u606f \"\u672a\u77e5\" # 12 \u6b72\u4ee5\u4e0b\uff0c\u8f38\u51fa\u5b57\u4e32\u8a0a\u606f \"\u666e\u901a\u7d1a\" # 13 \u6b72\u4ee5\u4e0a\uff0c\u4f4e\u65bc 18 \u6b72\uff0c\u8f38\u51fa\u5b57\u4e32\u8a0a\u606f \"\u8f14\u5c0e\u7d1a\" # 18 \u6b72\u4ee5\u4e0a\uff0c\u8f38\u51fa\u5b57\u4e32\u8a0a\u606f \"\u9650\u5236\u7d1a\" def get_rating ( age ): rating = \"\" if age == None : rating = \"\u672a\u77e5\" elif age < 13 : rating = \"\u666e\u901a\u7d1a\" elif age < 18 : rating = \"\u8f14\u5c0e\u7d1a\" else : rating = \"\u9650\u5236\u7d1a\" return rating print ( get_rating ( 18 )) print ( get_rating ( 13 )) print ( get_rating ( 12 )) print ( get_rating ( None ))","title":"\u96fb\u5f71\u4f9d\u5e74\u9f61\u5206\u7d1a"},{"location":"ch04/#_8","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # 18 \u6b72\u4ee5\u4e0a\uff0c\u4e0d\u662f\u5b78\u751f -> 190 \u5143 # 6 \u6b72\u4ee5\u4e0a\uff0c\u4f4e\u65bc 18 \u6b72\uff0c\u4e0d\u662f\u5b78\u751f -> 140 \u5143 # 6 \u6b72\u4ee5\u4e0a\u7684\u5b78\u751f -> 80 \u5143 # \u4f4e\u65bc 6 \u6b72 -> \u514d\u8cbb def ticket_fee ( age , is_student ): fee = 0 if age >= 6 and is_student == True : fee = 80 if age >= 6 and is_student == False : if age < 18 : fee = 140 else : fee = 190 return fee print ( ticket_fee ( 5 , False )) print ( ticket_fee ( 6 , True )) print ( ticket_fee ( 17 , False )) print ( ticket_fee ( 18 , False ))","title":"\u96fb\u5f71\u7968\u50f9\u8a08\u8cbb"},{"location":"ch04/#_9","text":"1 2 3 4 5 6 7 def print_multiplication_table (): for ri in range ( 1 , 10 ): for ci in range ( 1 , 10 ): print ( ci * ri , end = ' ' ) print () print_multiplication_table ()","title":"\u4e5d\u4e5d\u4e58\u6cd5\u8868"},{"location":"ch04/#_10","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def reverse_string ( astr ): result = '' for i in range ( len ( astr ) - 1 , - 1 , - 1 ): result += astr [ i ] return result str1 = reverse_string ( 'apple' ) print ( str1 ) str1 = reverse_string ( str1 ) print ( str1 ) str2 = reverse_string ( '12345' ) print ( str2 ) str2 = reverse_string ( str2 ) print ( str2 )","title":"\u5b57\u4e32\u5b57\u5143\u5012\u7f6e"},{"location":"ch04/#_11","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \"\"\" \u7a0b\u5f0f\u5fc5\u9808\u7b26\u5408\u4ee5\u4e0b\u689d\u4ef6\uff1a * \u5982\u679c\u6c92\u6709\u70ba\u8b8a\u6578 increment \u6307\u5b9a\u503c\uff0c\u5247 increment \u7b49\u65bc 1 * \u5982\u679c\u8b8a\u6578 isplus \u662f True\uff0c\u90a3\u9ebc increment \u5fc5\u9808\u52a0\u500d \"\"\" # \u7a0b\u5f0f\u78bc\u5982\u4e0b\uff1a 01 def add_inventory ( inventory , isplus , increment ): 02 if isplus == True : 03 increment = increment * 2 04 inventory = inventory + increment 05 return inventory 06 increment = 3 07 inventory = 24 08 new_inventory = add_inventory ( inventory , True , increment ) \"\"\" # \u91dd\u5c0d\u4e0b\u5217\u6558\u8ff0\uff0c\u6b63\u78ba\u7684\u9078 Yes\uff0c\u5426\u5247\u9078 No A. \u70ba\u4e86\u7b26\u5408\u8981\u6c42\u5fc5\u9808\u5c07 01 \u884c\u66f4\u6539\u70ba\uff1a def add_inventory(inventory, isplus, increment=1): B. \u5982\u679c\u67d0\u500b\u53c3\u6578\u5b9a\u7fa9\u9810\u8a2d\u503c\uff0c\u5176\u53f3\u5074\u7684\u4efb\u4f55\u53c3\u6578\u4e5f\u5fc5\u9808\u5b9a\u7fa9\u9810\u8a2d\u503c C. \u5982\u679c\u53ea\u7528\u5169\u500b\u53c3\u6578\u547c\u53eb\u51fd\u5f0f, \u5247\u7b2c\u4e09\u500b\u53c3\u6578\u7684\u503c\u5c07\u70ba None D. 03 \u884c\u7684\u7d50\u679c\u6703\u6539\u8b8a\u5728 06 \u884c\u4e2d\u8b8a\u6578 increment \u7684\u503c \"\"\"","title":"\u589e\u52a0\u5eab\u5b58\u2605"},{"location":"ch04/#_12","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 def get_pay ( salary = 0 , hours = 40 , h_rate = 25 , quantity = 0 , q_rate = 0 ): wage = 0 if quantity > 0 : return quantity * q_rate if salary > 0 : pass if hours > 40 : wage = ( hours - 40 ) * ( 1.5 * h_rate ) return wage + ( 40 * h_rate ) else : wage = hours * h_rate return wage \"\"\" # \u91dd\u5c0d\u4e0b\u5217\u6558\u8ff0\uff0c\u6b63\u78ba\u7684\u9078 Yes\uff0c\u5426\u5247\u9078 No A. \u547c\u53eb get_pay() \u51fd\u5f0f\u6703\u767c\u751f\u932f\u8aa4 B. get_pay(salary=51888) \u4e0d\u6703\u56de\u50b3\u4efb\u4f55\u503c C. get_pay(quantity=600, q_rate=5) \u56de\u50b3\u503c\u70ba 3000 \"\"\"","title":"\u8a08\u7b97\u5404\u7a2e\u85aa\u8cc7\u2605"},{"location":"ch05/","text":"5.\u7591\u96e3\u548c\u932f\u8aa4 \u57f7\u884c\u7591\u96e3\u6392\u89e3\u548c\u932f\u8aa4\u8655\u7406 \u5169\u6578\u76f8\u9664\u6545\u610f\u8f38\u932f 1 2 3 4 5 a = input ( 'a: ' ) b = input ( 'b: ' ) a = int ( a ) b = int ( b ) print ( a / b ) try-except\u8a9e\u6cd5\u932f\u8aa4x2 (1) 1 2 3 4 5 6 7 8 9 # \u81f3\u5c11\u8981\u6709\u4e00\u500b except \u5340\u6bb5 a = input ( 'a: ' ) b = input ( 'b: ' ) try : a = int ( a ) b = int ( b ) print ( a / b ) (2) 1 2 3 4 5 6 7 8 9 10 11 12 13 # \u53ea\u80fd\u6709\u4e00\u500b finally \u5340\u6bb5 a = input ( 'a: ' ) b = input ( 'b: ' ) try : a = int ( a ) b = int ( b ) print ( a / b ) finally : print ( '\u5fc5\u9808\u8f38\u5165\u6574\u6578' ) finally : print ( '\u5206\u6bcd\u4e0d\u53ef\u70ba 0' ) \u77e5\u9053\u767c\u751f\u67d0\u7a2e\u932f\u8aa4 1 2 3 4 5 6 7 8 9 10 11 a = input ( 'a: ' ) b = input ( 'b: ' ) try : a = int ( a ) b = int ( b ) print ( a / b ) except : print ( '\u767c\u751f\u932f\u8aa4' ) finally : print ( '-' * 20 ) \u77e5\u9053\u767c\u751f\u4ec0\u9ebc\u932f\u8aa4 1 2 3 4 5 6 7 8 9 10 11 12 a = input ( 'a: ' ) b = input ( 'b: ' ) try : a = int ( a ) b = int ( b ) print ( a / b ) except ValueError : print ( '\u5fc5\u9808\u8f38\u5165\u6574\u6578' ) except ZeroDivisionError : print ( '\u5206\u6bcd\u4e0d\u5f97\u70ba 0' ) # \u53ef\u4ee5\u7701\u7565 finally \u6e2c\u8a66\u67d0\u7269\u4ef6\u662f\u5426\u70ba\u67d0\u985e\u5225\u7684\u57f7\u884c\u500b\u9ad4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import unittest class Point (): def __init__ ( self ): self . x = 5 self . y = 5 def __repr__ ( self ): return f '( { self . x } , { self . y } )' class Plane (): def __init__ ( self ): self . width = 800 self . height = 600 def __repr__ ( self ): return f ' { self . width } x { self . height } ' class TestClass ( unittest . TestCase ): def test_isInstance ( self ): point = Point () plane = Plane () print ( 'point:' , point ) print ( 'plane:' , plane ) # assertIsInstance(obj, cls, msg=None) self . assertIsInstance ( point , Point ) self . assertIsInstance ( plane , Plane ) if __name__ == '__main__' : unittest . main () \u6e2c\u8a66\u5169\u500b\u7269\u4ef6\u8b8a\u6578\u662f\u5426\u6307\u5411\u540c\u4e00\u7269\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import unittest class Point (): def __init__ ( self , x , y ): self . x = x self . y = y def __repr__ ( self ): return f '( { self . x } , { self . y } )' class TestClass ( unittest . TestCase ): def test_isInstance ( self ): point1 = Point ( 5 , 5 ) point2 = Point ( 5 , 5 ) point3 = point1 point4 = point2 self . assertIs ( point1 , point3 ) if __name__ == '__main__' : unittest . main () \u6e2c\u8a66\u5169\u500b\u8b8a\u6578\u7684\u503c\u662f\u5426\u76f8\u540c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import unittest class Point (): def __init__ ( self , x , y ): self . position = ( x , y ) def get_postion ( self ): return self . position class TestClass ( unittest . TestCase ): def test_isInstance ( self ): point1 = Point ( 5 , 5 ) point2 = Point ( 5 , 5 ) pos1 = point1 . get_postion () pos2 = point2 . get_postion () self . assertEqual ( pos1 , pos2 ) if __name__ == '__main__' : unittest . main () \u6e2c\u8a66\u4e32\u5217\u4e2d\u662f\u5426\u6709\u67d0\u500b\u503c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import unittest class Hundred (): def get_odds ( self ): return list ( range ( 1 , 101 , 2 )) def get_evens ( self ): return list ( range ( 2 , 101 , 2 )) class TestClass ( unittest . TestCase ): def test_isInstance ( self ): hundred_obj = Hundred () odds = hundred_obj . get_odds () self . assertIn ( 11 , odds ) self . assertIn ( 21 , odds ) if __name__ == '__main__' : unittest . main ()","title":"5.\u7591\u96e3\u548c\u932f\u8aa4"},{"location":"ch05/#5","text":"\u57f7\u884c\u7591\u96e3\u6392\u89e3\u548c\u932f\u8aa4\u8655\u7406","title":"5.\u7591\u96e3\u548c\u932f\u8aa4"},{"location":"ch05/#_1","text":"1 2 3 4 5 a = input ( 'a: ' ) b = input ( 'b: ' ) a = int ( a ) b = int ( b ) print ( a / b )","title":"\u5169\u6578\u76f8\u9664\u6545\u610f\u8f38\u932f"},{"location":"ch05/#try-exceptx2","text":"(1) 1 2 3 4 5 6 7 8 9 # \u81f3\u5c11\u8981\u6709\u4e00\u500b except \u5340\u6bb5 a = input ( 'a: ' ) b = input ( 'b: ' ) try : a = int ( a ) b = int ( b ) print ( a / b ) (2) 1 2 3 4 5 6 7 8 9 10 11 12 13 # \u53ea\u80fd\u6709\u4e00\u500b finally \u5340\u6bb5 a = input ( 'a: ' ) b = input ( 'b: ' ) try : a = int ( a ) b = int ( b ) print ( a / b ) finally : print ( '\u5fc5\u9808\u8f38\u5165\u6574\u6578' ) finally : print ( '\u5206\u6bcd\u4e0d\u53ef\u70ba 0' )","title":"try-except\u8a9e\u6cd5\u932f\u8aa4x2"},{"location":"ch05/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 a = input ( 'a: ' ) b = input ( 'b: ' ) try : a = int ( a ) b = int ( b ) print ( a / b ) except : print ( '\u767c\u751f\u932f\u8aa4' ) finally : print ( '-' * 20 )","title":"\u77e5\u9053\u767c\u751f\u67d0\u7a2e\u932f\u8aa4"},{"location":"ch05/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 a = input ( 'a: ' ) b = input ( 'b: ' ) try : a = int ( a ) b = int ( b ) print ( a / b ) except ValueError : print ( '\u5fc5\u9808\u8f38\u5165\u6574\u6578' ) except ZeroDivisionError : print ( '\u5206\u6bcd\u4e0d\u5f97\u70ba 0' ) # \u53ef\u4ee5\u7701\u7565 finally","title":"\u77e5\u9053\u767c\u751f\u4ec0\u9ebc\u932f\u8aa4"},{"location":"ch05/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import unittest class Point (): def __init__ ( self ): self . x = 5 self . y = 5 def __repr__ ( self ): return f '( { self . x } , { self . y } )' class Plane (): def __init__ ( self ): self . width = 800 self . height = 600 def __repr__ ( self ): return f ' { self . width } x { self . height } ' class TestClass ( unittest . TestCase ): def test_isInstance ( self ): point = Point () plane = Plane () print ( 'point:' , point ) print ( 'plane:' , plane ) # assertIsInstance(obj, cls, msg=None) self . assertIsInstance ( point , Point ) self . assertIsInstance ( plane , Plane ) if __name__ == '__main__' : unittest . main ()","title":"\u6e2c\u8a66\u67d0\u7269\u4ef6\u662f\u5426\u70ba\u67d0\u985e\u5225\u7684\u57f7\u884c\u500b\u9ad4"},{"location":"ch05/#_5","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import unittest class Point (): def __init__ ( self , x , y ): self . x = x self . y = y def __repr__ ( self ): return f '( { self . x } , { self . y } )' class TestClass ( unittest . TestCase ): def test_isInstance ( self ): point1 = Point ( 5 , 5 ) point2 = Point ( 5 , 5 ) point3 = point1 point4 = point2 self . assertIs ( point1 , point3 ) if __name__ == '__main__' : unittest . main ()","title":"\u6e2c\u8a66\u5169\u500b\u7269\u4ef6\u8b8a\u6578\u662f\u5426\u6307\u5411\u540c\u4e00\u7269\u4ef6"},{"location":"ch05/#_6","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import unittest class Point (): def __init__ ( self , x , y ): self . position = ( x , y ) def get_postion ( self ): return self . position class TestClass ( unittest . TestCase ): def test_isInstance ( self ): point1 = Point ( 5 , 5 ) point2 = Point ( 5 , 5 ) pos1 = point1 . get_postion () pos2 = point2 . get_postion () self . assertEqual ( pos1 , pos2 ) if __name__ == '__main__' : unittest . main ()","title":"\u6e2c\u8a66\u5169\u500b\u8b8a\u6578\u7684\u503c\u662f\u5426\u76f8\u540c"},{"location":"ch05/#_7","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import unittest class Hundred (): def get_odds ( self ): return list ( range ( 1 , 101 , 2 )) def get_evens ( self ): return list ( range ( 2 , 101 , 2 )) class TestClass ( unittest . TestCase ): def test_isInstance ( self ): hundred_obj = Hundred () odds = hundred_obj . get_odds () self . assertIn ( 11 , odds ) self . assertIn ( 21 , odds ) if __name__ == '__main__' : unittest . main ()","title":"\u6e2c\u8a66\u4e32\u5217\u4e2d\u662f\u5426\u6709\u67d0\u500b\u503c"},{"location":"ch06/","text":"6.\u6a21\u7d44\u548c\u5de5\u5177 \u4f7f\u7528\u6a21\u7d44\u548c\u5de5\u5177\u57f7\u884c\u64cd\u4f5c \u4eca\u5929\u65e5\u671f\u6642\u9593 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # \u5f9e datetime \u6a21\u7d44\u532f\u5165 datetime \u985e\u5225 # \u4e26\u70ba datetime \u985e\u5225\u8a2d\u5b9a\u5225\u540d dt # \u5f8c\u7e8c\u7528\u5225\u540d\u64cd\u4f5c\u65b9\u6cd5\u5c31\u884c from datetime import datetime as dt # \u5c07\u4eca\u5929\u65e5\u671f\u6642\u9593\u5b58\u5165 today \u8b8a\u6578 today = dt . today () # \u8f38\u51fa\u4eca\u5929\u65e5\u671f\u6642\u9593 print ( today ) # \u8f38\u51fa\u5e74 print ( today . year ) # \u8f38\u51fa\u6708 print ( today . month ) # \u8f38\u51fa\u65e5 print ( today . day ) \u6a94\u6848\u8cc7\u6599\u8f38\u51fa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # \u51fd\u5f0f\u529f\u80fd\uff1a\u8b80\u53d6\u6a94\u6848\u5f8c\uff0c\u5c07\u6a94\u6848\u4e2d\u7684\u6bcf\u4e00\u884c\u5217\u5370\u51fa\u4f86 01 def print_file ( filename ): 02 line = None 03 if os . path . isfile ( filename ): 04 data = open ( filename , 'r' ) 05 for line in data : 06 print ( line ) # \u5047\u8a2d data.txt \u548c\u7a0b\u5f0f\u653e\u5728\u540c\u4e00\u500b\u8cc7\u6599\u593e print_file ( 'data.txt' ) \"\"\" # \u547c\u53eb\u57f7\u884c\u9019\u500b\u51fd\u5f0f\uff0c\u6703\u6536\u5230 03 \u884c\u7684\u932f\u8aa4\uff0c\u932f\u8aa4\u7684\u539f\u56e0\u61c9\u8a72\u662f\u4ec0\u9ebc\uff1f A. \u9700\u8981\u532f\u5165 os \u6a21\u7d44\u800c\u6c92\u6709\u532f\u5165 B. path \u65b9\u6cd5\u4e26\u4e0d\u5b58\u5728 os \u6a21\u7d44\u4e2d C. path \u7269\u4ef6\u4e2d\u4e0d\u5b58\u5728 isfile \u65b9\u6cd5 D. isfile \u65b9\u6cd5\u4e0d\u63a5\u53d7\u4e00\u500b\u53c3\u6578 \"\"\" \u6307\u5b9a\u4e82\u6578\u7bc4\u570dx2 (1) 1 2 3 4 5 import random print ( random . randrange ( 11 )) print ( random . randrange ( 11 , 31 )) print ( random . randrange ( 11 , 31 , 1 )) (2) 1 2 3 4 import random print ( random . randint ( 1 , 10 )) print ( random . randint ( 1 , 10 ) * 5 ) \u6d6e\u9ede\u6578\u7684\u7d55\u5c0d\u503c 1 2 3 4 5 6 7 8 9 10 11 12 13 import math def float_to_abs ( x ): print ( '(1) x:' , x ) # \u53d6\u6d6e\u9ede\u6578\u7684\u7d55\u5c0d\u503c # x = abs(x) x = math . fabs ( x ) print ( '(2) x:' , x ) # \u7121\u689d\u4ef6\u9032\u4f4d\u5230\u6574\u6578 x = math . ceil ( x ) print ( '(3) x:' , x ) float_to_abs ( - 12.48 )","title":"6.\u6a21\u7d44\u548c\u5de5\u5177"},{"location":"ch06/#6","text":"\u4f7f\u7528\u6a21\u7d44\u548c\u5de5\u5177\u57f7\u884c\u64cd\u4f5c","title":"6.\u6a21\u7d44\u548c\u5de5\u5177"},{"location":"ch06/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # \u5f9e datetime \u6a21\u7d44\u532f\u5165 datetime \u985e\u5225 # \u4e26\u70ba datetime \u985e\u5225\u8a2d\u5b9a\u5225\u540d dt # \u5f8c\u7e8c\u7528\u5225\u540d\u64cd\u4f5c\u65b9\u6cd5\u5c31\u884c from datetime import datetime as dt # \u5c07\u4eca\u5929\u65e5\u671f\u6642\u9593\u5b58\u5165 today \u8b8a\u6578 today = dt . today () # \u8f38\u51fa\u4eca\u5929\u65e5\u671f\u6642\u9593 print ( today ) # \u8f38\u51fa\u5e74 print ( today . year ) # \u8f38\u51fa\u6708 print ( today . month ) # \u8f38\u51fa\u65e5 print ( today . day )","title":"\u4eca\u5929\u65e5\u671f\u6642\u9593"},{"location":"ch06/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # \u51fd\u5f0f\u529f\u80fd\uff1a\u8b80\u53d6\u6a94\u6848\u5f8c\uff0c\u5c07\u6a94\u6848\u4e2d\u7684\u6bcf\u4e00\u884c\u5217\u5370\u51fa\u4f86 01 def print_file ( filename ): 02 line = None 03 if os . path . isfile ( filename ): 04 data = open ( filename , 'r' ) 05 for line in data : 06 print ( line ) # \u5047\u8a2d data.txt \u548c\u7a0b\u5f0f\u653e\u5728\u540c\u4e00\u500b\u8cc7\u6599\u593e print_file ( 'data.txt' ) \"\"\" # \u547c\u53eb\u57f7\u884c\u9019\u500b\u51fd\u5f0f\uff0c\u6703\u6536\u5230 03 \u884c\u7684\u932f\u8aa4\uff0c\u932f\u8aa4\u7684\u539f\u56e0\u61c9\u8a72\u662f\u4ec0\u9ebc\uff1f A. \u9700\u8981\u532f\u5165 os \u6a21\u7d44\u800c\u6c92\u6709\u532f\u5165 B. path \u65b9\u6cd5\u4e26\u4e0d\u5b58\u5728 os \u6a21\u7d44\u4e2d C. path \u7269\u4ef6\u4e2d\u4e0d\u5b58\u5728 isfile \u65b9\u6cd5 D. isfile \u65b9\u6cd5\u4e0d\u63a5\u53d7\u4e00\u500b\u53c3\u6578 \"\"\"","title":"\u6a94\u6848\u8cc7\u6599\u8f38\u51fa"},{"location":"ch06/#x2","text":"(1) 1 2 3 4 5 import random print ( random . randrange ( 11 )) print ( random . randrange ( 11 , 31 )) print ( random . randrange ( 11 , 31 , 1 )) (2) 1 2 3 4 import random print ( random . randint ( 1 , 10 )) print ( random . randint ( 1 , 10 ) * 5 )","title":"\u6307\u5b9a\u4e82\u6578\u7bc4\u570dx2"},{"location":"ch06/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 import math def float_to_abs ( x ): print ( '(1) x:' , x ) # \u53d6\u6d6e\u9ede\u6578\u7684\u7d55\u5c0d\u503c # x = abs(x) x = math . fabs ( x ) print ( '(2) x:' , x ) # \u7121\u689d\u4ef6\u9032\u4f4d\u5230\u6574\u6578 x = math . ceil ( x ) print ( '(3) x:' , x ) float_to_abs ( - 12.48 )","title":"\u6d6e\u9ede\u6578\u7684\u7d55\u5c0d\u503c"}]}